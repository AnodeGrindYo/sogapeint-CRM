var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AccountModule.html",[0,0.769,1,2.226]],["body/modules/AccountModule.html",[0,1.51,1,4.246,2,1.196,3,1.859,4,1.283,5,2.272,6,2.021,7,2.209,8,1.718,9,3.098,10,3.098,11,3.72,12,0.028,13,3.403,14,2.921,15,2.021,16,2.021,17,0.354,18,0.315,19,0.315,20,3.674,21,0.841,22,5.078,23,2.272,24,1.343,25,2.51,26,2.921,27,2.921,28,3.595,29,2.672,30,2.672,31,2.672,32,1.957,33,1.034,34,1.034,35,4.097,36,4.858,37,1.957,38,0.621,39,1.957,40,0.394,41,2.672,42,1.859,43,2.106,44,1.034,45,1.017,46,2.672,47,2.719,48,3.608,49,3.22,50,3.098,51,1.582,52,3.674,53,2.021,54,3.22,55,4.858,56,3.595,57,3.674,58,4.858,59,3.098,60,1.074,61,2.209,62,3.098,63,1.593,64,2.021,65,3.674,66,0.354,67,0.241,68,0.019,69,0.019]],["title/modules/AccountRoutingModule.html",[0,0.769,11,2.019]],["body/modules/AccountRoutingModule.html",[0,1.405,2,1.269,8,1.823,11,3.036,12,0.028,13,2.144,17,0.375,18,0.334,19,0.334,24,1.306,25,2.189,26,2.344,27,2.344,28,2.885,29,2.144,32,1.57,33,0.829,37,1.57,38,0.542,39,2.034,40,0.418,44,0.829,45,1.081,46,2.777,48,3.347,49,3.927,51,1.269,54,2.584,60,1.264,63,2.812,66,0.375,67,0.256,68,0.02,69,0.02,70,3.898,71,3.287,72,3.927,73,1.69,74,2.034,75,1.534,76,1.479,77,2.344,78,3.898,79,2.885,80,2.584,81,1.69,82,1.973,83,2.034,84,2.885,85,3.287,86,2.885,87,2.885,88,3.287,89,3.898,90,3.898,91,2.885,92,3.347,93,2.584,94,3.898,95,5.05,96,2.584,97,3.898,98,2.584,99,2.189,100,3.287,101,2.584,102,1.269,103,3.287,104,2.885]],["title/components/AppComponent.html",[105,0.769,106,1.259]],["body/components/AppComponent.html",[4,1.203,12,0.027,17,0.332,18,0.295,19,0.295,21,0.788,24,1.121,33,1.201,34,0.99,38,0.369,40,0.369,44,0.99,45,1.08,53,2.559,60,1.04,66,0.332,67,0.226,68,0.018,69,0.018,76,1.391,77,2.797,99,2.691,102,1.515,105,1.206,106,2.115,107,2.176,108,2.666,109,2.355,110,1.743,111,1.743,112,2.905,113,2.501,114,4.758,115,3.084,116,4.653,117,4.653,118,4.653,119,4.653,120,3.443,121,2.898,122,4.653,123,3.924,124,4.653,125,4.653,126,1.743,127,3.238,128,2.992,129,2.355,130,2.355,131,5.269,132,2.355,133,4.653,134,0.582,135,1.515,136,5.269,137,0.733,138,1.291,139,1.743,140,1.743,141,3.924,142,0.847,143,3.445,144,2.283,145,2.283,146,3.084,147,3.445,148,2.855,149,3.084,150,2.797,151,2.283,152,3.445,153,2.355,154,1.743,155,2.639,156,1.743,157,1.065,158,1.743,159,1.291,160,1.743,161,1.203,162,1.743,163,1.203,164,1.743,165,1.203,166,1.743,167,1.203,168,1.743,169,1.291,170,1.493,171,1.611,172,1.743]],["title/modules/AppModule.html",[0,0.769,173,2.226]],["body/modules/AppModule.html",[0,1.276,2,1.667,3,1.209,4,0.835,5,2.011,6,2.366,7,2.586,8,1.118,12,0.028,14,2.155,15,1.314,16,1.314,17,0.23,18,0.205,19,0.205,21,0.547,24,1.322,30,1.971,31,1.971,33,1.186,34,0.763,37,1.444,38,0.678,39,1.444,40,0.256,43,1.036,44,0.915,45,1.068,46,1.314,48,1.584,50,2.015,51,0.778,53,1.971,60,1.226,64,2.366,66,0.345,67,0.157,68,0.014,69,0.014,74,1.732,75,1.306,76,1.136,84,1.768,96,1.584,98,3.168,99,2.589,101,1.584,102,0.778,106,2.303,113,1.444,114,3.023,115,2.376,128,1.118,146,1.584,173,4.299,174,2.015,175,2.015,176,2.015,177,2.015,178,2.015,179,3.232,180,3.232,181,3.232,182,3.232,183,3.352,184,3.232,185,1.768,186,2.652,187,3.023,188,3.585,189,3.585,190,4.779,191,3.585,192,2.015,193,1.768,194,3.585,195,4.03,196,3.168,197,1.314,198,3.585,199,1.314,200,3.023,201,4.03,202,2.39,203,2.39,204,3.585,205,3.536,206,2.015,207,3.023,208,2.015,209,3.023,210,1.768,211,1.118,212,1.314,213,2.015,214,2.015,215,3.023,216,2.39,217,2.39,218,2.015,219,2.39,220,2.39,221,3.168,222,1.584,223,2.015,224,2.39,225,2.39,226,2.39,227,3.536,228,2.015,229,1.554,230,0.963,231,2.376,232,1.314,233,2.39,234,2.39,235,3.585,236,2.015,237,1.118,238,2.015,239,1.314,240,2.015,241,2.015,242,1.768,243,3.023,244,3.023,245,2.015,246,1.118,247,2.652,248,0.588,249,1.444,250,1.437,251,2.015,252,0.631,253,0.835,254,2.39,255,2.39,256,2.39,257,1.584,258,1.437,259,2.39,260,2.39,261,2.39,262,2.015,263,2.39,264,2.39,265,4.779,266,2.39,267,1.768,268,2.39,269,2.015,270,1.768,271,1.437,272,4.301,273,4.301,274,2.366,275,2.39]],["title/modules/AppRoutingModule.html",[0,0.769,179,2.019]],["body/modules/AppRoutingModule.html",[0,1.069,2,1.127,8,1.619,12,0.028,17,0.333,18,0.297,19,0.297,22,2.92,24,1.256,25,1.501,26,2.082,33,1.124,34,1.203,35,2.92,37,1.395,38,0.606,39,1.881,40,0.371,43,1.501,44,0.993,45,1.05,46,1.904,48,2.295,49,2.295,51,1.127,60,1.165,61,2.082,63,2.695,66,0.333,67,0.227,68,0.018,69,0.018,71,2.92,72,3.502,73,1.501,74,1.395,75,1.717,77,2.082,80,3.095,81,1.501,82,2.673,83,1.395,84,2.562,85,3.937,86,3.909,88,4.455,91,2.562,92,2.295,96,3.502,99,2.29,105,0.793,113,1.395,161,1.975,179,2.807,214,2.92,215,4.768,231,2.295,276,3.463,277,3.913,278,3.463,279,3.463,280,2.92,281,3.463,282,3.463,283,2.92,284,3.463,285,3.463,286,3.463,287,1.501,288,3.463,289,3.463,290,3.463,291,3.463,292,3.463,293,3.463,294,1.619,295,1.881,296,2.082,297,3.463,298,3.463,299,3.937,300,3.463,301,2.295,302,3.463,303,3.463,304,3.463,305,2.92,306,4.67,307,3.463,308,2.082,309,4.67,310,2.562,311,3.463,312,3.463,313,2.92,314,3.463,315,3.463]],["title/guards/AuthGuard.html",[277,2.226,316,2.485]],["body/guards/AuthGuard.html",[12,0.028,17,0.284,18,0.253,19,0.253,21,0.956,32,1.187,33,0.627,34,1.123,38,0.598,40,0.316,43,1.811,44,0.889,45,0.891,51,1.98,56,3.091,60,1.042,64,1.621,66,0.284,67,0.193,68,0.017,69,0.017,73,1.278,75,1.269,76,1.103,81,1.811,82,3.129,83,1.187,129,1.492,134,0.498,137,0.889,142,1.028,150,2.917,157,0.956,211,1.378,212,1.621,229,1.278,230,2.397,231,1.954,232,1.621,239,2.297,246,1.953,248,1.028,249,1.683,252,1.281,274,2.297,277,3.499,287,2.288,294,2.269,295,1.683,296,3.35,299,4.451,308,2.512,317,2.948,318,2.486,319,4.178,320,3.523,321,4.451,322,4.178,323,2.089,324,3.091,325,2.297,326,3.523,327,5.279,328,1.183,329,1.103,330,2.948,331,3.836,332,2.579,333,3.59,334,2.903,335,2.948,336,1.269,337,1.103,338,4.178,339,5.279,340,5.279,341,5.279,342,2.948,343,4.178,344,4.178,345,5.279,346,4.178,347,4.178,348,2.486,349,3.523,350,4.178,351,4.178,352,1.269,353,2.181,354,2.486,355,2.948,356,2.948,357,1.621,358,1.105,359,2.269,360,2.181,361,2.948,362,2.486,363,2.948,364,3.499,365,2.486,366,2.948,367,2.948,368,2.486,369,2.486,370,1.378,371,2.486,372,2.181,373,2.181,374,2.948,375,1.492,376,1.492,377,2.948,378,2.948,379,2.486,380,2.948,381,1.772,382,2.486,383,2.948,384,2.486,385,2.948,386,1.772]],["title/modules/AuthModule.html",[0,0.769,13,1.847]],["body/modules/AuthModule.html",[0,1.353,2,0.938,3,1.457,4,1.006,5,2.24,6,2.872,7,1.731,8,1.346,12,0.028,13,3.563,14,2.47,15,1.583,16,1.583,17,0.277,18,0.247,19,0.247,21,0.659,24,1.357,25,2.076,26,2.88,30,2.259,31,2.259,32,2.38,33,1.175,34,1.222,37,1.655,38,0.659,39,1.655,40,0.309,41,2.634,42,1.457,43,2.264,44,1.019,45,1.076,46,1.583,47,2.131,51,1.338,53,3.037,60,1.214,61,1.731,62,2.428,63,2.076,64,2.259,66,0.277,67,0.189,68,0.016,69,0.016,75,1.744,87,2.131,102,0.938,104,2.131,121,2.634,123,3.464,163,2.005,165,2.005,167,2.005,199,1.583,200,3.464,213,2.428,218,2.428,230,1.16,237,1.346,257,1.908,262,2.428,287,1.781,294,1.921,295,1.655,376,2.079,387,2.428,388,2.428,389,2.428,390,3.553,391,3.633,392,2.879,393,4.108,394,4.108,395,2.723,396,2.47,397,1.921,398,1.921,399,4.108,400,4.108,401,5.223,402,4.79,403,5.223,404,2.723,405,4.108,406,2.131,407,2.428,408,4.108,409,4.108,410,2.879,411,2.879,412,2.879,413,2.428,414,2.428,415,2.428,416,2.131,417,2.723,418,1.921,419,2.879,420,2.879,421,2.428,422,2.428,423,2.879,424,2.879,425,2.131,426,2.879,427,2.879]],["title/modules/AuthRoutingModule.html",[0,0.769,390,2.019]],["body/modules/AuthRoutingModule.html",[0,1.066,2,1.124,8,1.614,12,0.028,15,1.898,17,0.332,18,0.296,19,0.296,24,1.322,25,2.019,26,2.075,32,1.876,33,1.122,34,1.322,37,1.39,38,0.632,39,1.876,40,0.37,43,2.019,44,1.255,45,1.092,46,2.9,51,1.717,53,1.898,54,2.287,60,1.247,63,2.775,66,0.332,67,0.226,68,0.018,69,0.018,72,3.743,73,1.496,75,1.415,77,2.075,79,3.447,80,3.088,81,1.496,82,2.669,86,3.902,91,2.553,92,2.287,98,2.287,99,2.019,100,2.91,101,2.287,102,1.517,103,2.91,104,2.553,105,1.207,121,1.898,146,2.287,163,1.627,165,1.627,167,1.627,295,1.39,305,2.91,323,1.293,375,2.669,376,2.669,390,2.801,395,3.088,396,3.171,397,2.466,398,2.466,413,2.91,414,2.91,415,2.91,416,2.553,428,3.451,429,3.451,430,3.451,431,3.451,432,3.447,433,1.898,434,2.91,435,2.91,436,1.614,437,2.91,438,3.451,439,3.451,440,3.451,441,3.451]],["title/injectables/AuthenticationService.html",[332,1.456,352,1.02]],["body/injectables/AuthenticationService.html",[12,0.028,17,0.2,18,0.178,19,0.178,21,1.018,24,0.947,25,1.398,30,1.774,31,1.774,32,0.838,33,1.084,34,1.284,38,0.424,40,0.223,44,0.686,45,1.127,51,1.449,60,1.205,66,0.2,67,0.136,68,0.013,69,0.013,75,0.98,76,1.488,81,1.712,83,2.43,129,1.053,134,0.351,135,1.05,137,0.947,138,2.31,142,1.307,157,0.904,223,1.755,227,2.923,229,1.712,230,1.299,237,1.508,246,2.251,248,1.387,249,2.504,252,1.403,258,1.939,269,2.72,287,2.303,294,2.97,296,2.895,310,2.387,323,2.159,328,0.914,329,1.043,332,1.398,336,1.2,337,1.043,352,0.98,357,1.145,364,2.949,370,1.508,372,2.387,376,2.251,381,2.675,395,2.138,396,2.675,397,2.854,398,2.854,418,0.973,433,1.774,436,2.567,442,1.251,443,1.755,444,2.72,445,3.226,446,3.226,447,3.226,448,2.785,449,2.923,450,2.949,451,2.387,452,3.226,453,3.226,454,2.081,455,2.138,456,3.563,457,2.138,458,2.72,459,3.292,460,2.72,461,2.081,462,2.72,463,2.693,464,4.063,465,4.295,466,4.295,467,3.292,468,2.72,469,2.081,470,2.387,471,0.838,472,3.226,473,2.081,474,2.387,475,2.138,476,3.226,477,3.226,478,2.081,479,2.138,480,2.72,481,3.226,482,2.72,483,3.292,484,2.387,485,2.081,486,2.081,487,1.38,488,5.093,489,5.093,490,5.093,491,5.093,492,1.54,493,1.54,494,2.081,495,2.081,496,3.226,497,2.72,498,2.081,499,2.081,500,2.081,501,2.081]],["title/injectables/AuthfakeauthenticationService.html",[334,1.847,352,1.02]],["body/injectables/AuthfakeauthenticationService.html",[12,0.028,17,0.252,18,0.224,19,0.224,21,0.878,24,1.131,25,1.662,32,1.054,33,0.965,34,0.965,38,0.57,40,0.281,44,0.557,45,1.125,51,1.81,60,0.757,61,2.305,66,0.252,67,0.172,68,0.015,69,0.015,75,1.688,76,1.319,83,2.142,102,0.852,129,1.324,134,0.442,135,1.248,137,1.063,138,2.083,142,1.367,157,0.878,196,3.311,197,1.439,221,2.541,227,2.837,228,2.207,230,1.054,236,3.233,237,1.793,246,1.793,248,1.308,249,2.238,252,1.198,253,0.914,258,2.305,287,1.134,294,3.004,295,1.054,296,1.573,323,2.083,328,1.086,329,0.691,334,2.109,336,1.164,337,1.012,352,1.164,357,1.439,359,2.122,364,3.008,370,1.793,371,3.233,376,2.528,381,2.305,397,2.336,398,2.336,418,1.224,433,2.109,436,2.487,442,1.573,448,2.487,449,3.697,450,3.311,455,2.541,456,3.697,459,3.935,460,3.233,463,2.487,464,2.837,467,3.358,468,3.233,470,2.837,471,1.054,492,1.936,493,1.936,502,2.207,503,3.834,504,3.233,505,3.834,506,3.233,507,4.996,508,2.541,509,4.538,510,2.207,511,3.834,512,2.617,513,3.834,514,3.834,515,3.341,516,3.834,517,4.538,518,2.617,519,4.538,520,2.617,521,2.617,522,2.617,523,3.834,524,2.109,525,1.324,526,1.936,527,1.324,528,2.617,529,1.573,530,2.541,531,2.617,532,2.617,533,2.617,534,2.617,535,2.617,536,2.617,537,2.617,538,2.617,539,2.617,540,2.617,541,3.834,542,3.233,543,1.735,544,2.617,545,2.617,546,2.617,547,2.207,548,2.617,549,2.617,550,2.207,551,2.617,552,2.617,553,2.617]],["title/interceptors/ErrorInterceptor.html",[182,2.019,554,2.226]],["body/interceptors/ErrorInterceptor.html",[12,0.028,17,0.396,18,0.352,19,0.352,38,0.669,40,0.441,66,0.396,67,0.269,68,0.021,69,0.021,81,1.781,134,0.694,137,1.111,142,1.285,157,1.196,182,3.14,197,2.259,248,1.011,252,1.379,328,1.479,329,1.085,332,2.764,336,1.586,337,1.379,352,1.586,353,3.04,358,1.54,450,2.723,497,3.464,515,3.452,525,2.079,527,2.079,529,2.47,555,3.04,556,3.464,557,3.865,558,3.464,559,4.108,560,3.865,561,4.471,562,4.249,563,4.471,564,4.108,565,3.04,566,3.04,567,3.865,568,3.464,569,4.108,570,4.108,571,4.108,572,4.404,573,4.108,574,4.108,575,3.464,576,4.108,577,4.108,578,2.259,579,4.108,580,4.108,581,4.108]],["title/interfaces/Event.html",[582,2.019,583,2.226]],["body/interfaces/Event.html",[12,0.028,17,0.386,18,0.343,19,0.343,38,0.609,40,0.43,66,0.386,67,0.263,68,0.02,69,0.02,129,2.028,134,0.677,135,1.674,137,1.431,138,2.321,246,2.8,250,2.41,252,1.058,253,1.4,329,1.058,337,1.358,352,1.561,357,2.205,359,1.874,471,1.614,525,2.028,526,2.966,527,2.028,582,2.41,583,4.199,584,4.009,585,2.657,586,5.557,587,4.336,588,4.336,589,3.38,590,3.805,591,2.41,592,3.38,593,3.38,594,3.38,595,3.38,596,2.657,597,4.336,598,2.966,599,3.38,600,3.38,601,3.38,602,3.38,603,3.38,604,3.38,605,3.38,606,3.38,607,3.38]],["title/injectables/EventService.html",[352,1.02,591,2.019]],["body/injectables/EventService.html",[12,0.028,17,0.344,18,0.306,19,0.306,21,1.092,38,0.576,40,0.383,66,0.344,67,0.234,68,0.019,69,0.019,129,1.809,134,0.604,135,1.553,137,1.415,138,2.349,139,2.414,140,2.414,142,1.409,157,1.092,246,2.679,248,1.173,250,2.868,252,0.944,253,1.666,328,1.351,329,1.418,336,1.449,337,1.26,352,1.449,357,1.966,359,2.511,442,2.149,471,1.921,525,1.809,526,2.645,527,1.809,582,2.149,583,4.274,585,2.37,586,5.437,587,4.527,588,4.527,589,3.015,590,4.239,591,2.868,592,4.527,593,4.83,594,4.023,595,3.015,596,3.797,597,4.83,598,3.53,599,4.023,600,4.023,601,3.015,602,3.015,603,3.015,604,3.015,605,3.015,606,3.015,607,3.015,608,4.771,609,3.53,610,3.575,611,3.575]],["title/interceptors/FakeBackendInterceptor.html",[183,2.019,554,2.226]],["body/interceptors/FakeBackendInterceptor.html",[12,0.028,17,0.216,18,0.192,19,0.192,38,0.496,40,0.24,45,0.378,66,0.216,67,0.147,68,0.014,69,0.014,76,0.591,81,2.625,87,3.059,134,0.378,137,0.476,142,0.839,157,0.512,183,2.051,195,1.888,197,1.231,237,1.047,248,0.551,252,1.675,253,1.192,270,3.682,295,0.902,328,0.966,329,1.091,336,0.68,337,0.591,352,1.036,358,0.839,373,1.657,397,1.047,398,1.047,425,1.657,433,1.231,436,1.047,448,2.866,451,1.657,457,2.74,463,1.595,483,3.421,515,2.78,525,1.133,527,1.133,542,1.888,543,3.959,555,1.657,557,2.525,560,2.525,561,3.421,562,4.347,563,3.421,565,2.525,566,1.657,567,2.525,568,4.196,572,3.898,575,1.888,578,2.542,598,1.657,609,1.657,612,3.486,613,1.888,614,2.239,615,2.239,616,4.977,617,2.239,618,2.239,619,2.239,620,2.239,621,4.134,622,2.239,623,2.239,624,5.453,625,5.453,626,5.972,627,4.623,628,4.623,629,2.239,630,3.059,631,2.239,632,1.888,633,1.888,634,2.239,635,2.239,636,2.239,637,3.898,638,2.239,639,2.239,640,2.239,641,4.977,642,3.486,643,2.239,644,4.134,645,3.412,646,2.239,647,2.239,648,2.239,649,2.239,650,3.412,651,4.623,652,5.244,653,3.412,654,5.621,655,2.239,656,4.196,657,4.598,658,3.412,659,3.412,660,1.888,661,2.239,662,1.888,663,2.239,664,4.623,665,5.244,666,2.239,667,2.239,668,1.888,669,1.888,670,1.888,671,2.239,672,2.239,673,2.239,674,2.239,675,3.486,676,3.486,677,4.134,678,4.134,679,4.134,680,4.134,681,3.486,682,4.134,683,3.486,684,3.412,685,3.412,686,3.412,687,3.412,688,3.412,689,3.412,690,3.412,691,3.412,692,3.412,693,3.486,694,2.239,695,1.231,696,2.239,697,2.239,698,2.239,699,2.239,700,2.239,701,2.239,702,2.239,703,3.412,704,2.239,705,2.239,706,2.239,707,2.239,708,2.239,709,2.239,710,2.239,711,2.239,712,2.239,713,2.239,714,2.239,715,3.412,716,1.888]],["title/classes/FirebaseAuthBackend.html",[67,0.22,717,2.226]],["body/classes/FirebaseAuthBackend.html",[12,0.028,17,0.179,18,0.159,19,0.159,21,1.164,23,1.953,24,1.032,25,1.278,30,1.621,31,1.621,33,1.032,34,1.157,38,0.393,44,0.627,45,1.119,51,0.96,60,0.582,66,0.179,67,0.122,68,0.012,69,0.012,74,1.954,76,1.471,77,1.772,81,1.278,83,2.291,102,1.36,134,0.313,135,0.96,139,2.455,140,2.455,142,1.298,155,1.715,157,1.111,222,1.954,229,2.508,230,0.747,237,0.868,246,2.543,248,1.337,249,1.954,252,1.436,253,1.592,271,1.772,287,2.205,294,2.869,296,2.205,308,1.772,310,2.181,323,1.708,324,1.373,328,0.835,329,0.49,336,1.474,337,0.778,372,1.373,376,1.492,396,2.512,397,2.783,398,2.783,433,1.02,436,2.269,444,2.486,448,2.269,450,2.431,455,1.954,456,2.181,457,2.431,458,1.565,459,3.373,462,2.486,463,2.95,465,3.523,466,3.523,467,2.181,470,2.181,474,2.181,475,1.954,479,1.954,482,2.486,483,2.181,484,2.181,487,1.954,524,1.02,547,2.486,578,2.297,717,3.836,718,1.373,719,1.373,720,2.948,721,2.181,722,3.668,723,3.668,724,3.668,725,3.668,726,3.668,727,2.948,728,2.948,729,1.855,730,2.486,731,3.093,732,2.948,733,3.093,734,1.855,735,1.855,736,2.486,737,4.852,738,1.855,739,1.855,740,1.855,741,1.855,742,1.772,743,2.948,744,1.855,745,2.948,746,2.948,747,2.948,748,1.855,749,1.855,750,1.855,751,1.855,752,1.855,753,2.948,754,1.855,755,4.178,756,4.178,757,1.855,758,2.948,759,2.948,760,2.948,761,4.178,762,1.855,763,1.855,764,1.855,765,1.855,766,1.855,767,2.948,768,2.948,769,1.855,770,1.855,771,1.855,772,2.948,773,1.855,774,2.486,775,2.486,776,3.373,777,1.565,778,2.486,779,3.093,780,1.565,781,1.565]],["title/components/HorizontalComponent.html",[105,0.769,159,1.259]],["body/components/HorizontalComponent.html",[4,1.037,12,0.027,17,0.286,18,0.254,19,0.254,21,0.68,23,1.964,24,1.037,33,0.893,34,1.375,38,0.318,40,0.318,44,1.318,45,1.007,47,3.108,60,1.103,66,0.286,67,0.195,68,0.017,69,0.017,74,1.691,76,1.475,99,1.82,102,1.586,105,1.115,106,1.113,107,1.964,108,2.125,109,2.125,110,1.503,111,1.503,113,2.495,121,2.31,126,1.503,127,3.135,128,2.897,130,2.125,132,2.125,134,0.501,142,1.033,144,1.968,145,1.968,148,2.68,149,2.784,150,2.525,151,1.968,153,2.125,154,1.503,155,2.477,156,1.503,157,0.961,158,1.503,159,1.985,160,1.503,161,1.037,162,1.503,163,1.037,164,1.503,165,1.037,166,1.503,167,1.037,168,1.503,169,1.113,170,1.287,171,1.389,172,1.503,186,3.108,248,0.73,287,1.82,323,1.574,325,2.913,328,1.189,329,1.286,358,1.574,375,2.68,404,1.968,417,2.784,432,3.108,471,1.691,782,2.504,783,3.953,784,3.51,785,4.413,786,4.2,787,4.2,788,4.2,789,3.704,790,2.679,791,4.872,792,4.2,793,2.913,794,2.97,795,2.97,796,3.108,797,2.784,798,3.541,799,3.541,800,3.541,801,4.2,802,4.872,803,4.466,804,4.108,805,3.541,806,3.108,807,2.504,808,2.504,809,2.97,810,2.198,811,2.97,812,2.504,813,2.504,814,2.97,815,2.504,816,2.97,817,2.504,818,2.525]],["title/interceptors/JwtInterceptor.html",[184,2.019,554,2.226]],["body/interceptors/JwtInterceptor.html",[12,0.028,17,0.367,18,0.326,19,0.326,38,0.67,40,0.408,66,0.367,67,0.25,68,0.02,69,0.02,81,2.156,134,0.643,137,1.058,142,1.223,157,1.139,184,2.991,197,2.094,211,1.781,212,2.094,229,1.651,232,2.094,248,0.937,252,1.006,270,2.818,328,1.409,329,1.006,332,2.709,333,4.099,334,3.23,336,1.511,337,1.313,352,1.511,353,2.818,354,3.211,358,1.428,359,1.781,364,3.893,365,3.211,369,3.211,515,3.33,525,1.927,529,2.29,543,2.524,555,2.818,557,3.681,558,3.211,560,3.681,561,4.346,562,4.099,563,4.346,565,4.099,566,2.818,567,3.681,676,3.211,683,4.194,819,3.211,820,3.809,821,3.809,822,5.873,823,4.974,824,4.974,825,5.539,826,3.211,827,3.211,828,3.809]],["title/components/LayoutComponent.html",[105,0.769,161,1.173]],["body/components/LayoutComponent.html",[4,0.922,12,0.028,17,0.254,18,0.226,19,0.226,21,0.605,23,1.805,24,0.821,27,2.321,33,0.971,34,0.971,38,0.489,40,0.283,43,1.673,44,1.186,45,1.069,60,0.991,66,0.254,67,0.173,68,0.015,69,0.015,74,1.064,75,1.172,76,1.472,99,1.673,105,1.044,106,0.99,107,1.805,108,1.953,109,1.953,110,1.337,111,1.337,113,2.15,126,1.337,127,3.047,128,2.816,130,1.953,132,1.953,134,0.446,135,1.257,137,1.136,138,1.447,142,1.313,144,1.751,145,1.751,148,2.308,149,2.559,150,2.321,151,1.751,153,1.953,154,1.337,155,2.346,156,1.337,157,1.044,158,1.337,159,0.99,160,1.337,161,1.752,162,1.337,163,0.922,164,1.337,165,0.922,166,1.337,167,0.922,168,1.337,169,0.99,170,1.977,171,1.235,172,1.337,230,2.378,237,1.805,248,1.313,252,1.019,295,2.378,308,1.588,320,4.231,323,1.881,328,1.093,329,0.697,336,0.802,337,0.697,348,3.255,349,4.231,358,1.447,370,1.235,404,1.751,418,1.235,471,1.064,529,1.588,550,2.227,591,3.462,695,1.453,742,1.588,783,2.559,784,1.751,785,3.713,789,3.913,790,2.509,793,2.76,805,3.255,806,1.955,810,4.76,815,2.227,829,2.227,830,3.713,831,3.86,832,3.86,833,3.86,834,4.562,835,3.86,836,4.562,837,5.018,838,5.018,839,2.641,840,3.86,841,2.641,842,5.018,843,5.018,844,2.641,845,2.641,846,2.641,847,2.641,848,2.641,849,2.641,850,3.376,851,2.856,852,2.641,853,2.641,854,1.751,855,2.641,856,2.641,857,2.641,858,2.641,859,5.018,860,2.641,861,3.86,862,2.641,863,2.641,864,2.641]],["title/modules/LayoutsModule.html",[0,0.769,180,2.019]],["body/modules/LayoutsModule.html",[0,1.435,2,1.021,3,1.586,4,1.095,5,2.346,6,1.724,7,1.884,8,2.346,12,0.028,14,2.622,15,1.724,16,1.724,17,0.302,18,0.269,19,0.269,21,0.717,24,1.288,33,0.928,34,1.213,37,1.757,38,0.649,39,1.757,40,0.336,41,2.398,42,1.586,43,1.89,44,0.667,45,1.022,53,3.135,59,2.643,60,1.278,61,1.884,63,1.359,66,0.302,67,0.205,68,0.017,69,0.017,72,2.891,73,1.359,75,1.647,76,1.151,92,2.891,98,2.077,99,2.471,101,2.891,102,1.633,113,2.296,115,2.077,121,2.398,159,2.426,161,2.061,169,2.426,170,1.359,171,1.466,180,3.947,187,3.678,258,2.622,323,1.635,325,2.982,375,2.207,416,3.227,418,2.346,421,3.678,783,2.077,784,2.891,785,3.712,789,2.891,830,3.712,865,2.643,866,2.643,867,2.643,868,2.643,869,3.548,870,3.134,871,4.361,872,4.361,873,4.361,874,4.361,875,4.361,876,3.134,877,3.134,878,3.134,879,3.134,880,4.361]],["title/components/LoginComponent.html",[105,0.769,163,1.173]],["body/components/LoginComponent.html",[4,0.651,12,0.028,17,0.354,18,0.16,19,0.16,21,0.427,23,2.274,24,0.972,27,1.779,29,1.627,32,1.192,33,1.034,34,1.212,38,0.547,40,0.2,44,0.972,45,1.077,49,1.961,51,1.583,56,2.189,60,1.102,64,2.023,66,0.179,67,0.122,68,0.012,69,0.012,73,0.808,74,0.751,75,1.117,76,1.473,82,2.119,83,1.192,93,2.776,102,0.607,105,0.842,106,0.699,107,1.384,108,1.497,109,0.943,110,0.943,111,0.943,113,1.192,126,0.943,127,2.756,128,2.547,130,1.497,132,1.497,134,0.315,135,0.963,137,1.084,138,1.379,139,1.862,140,1.862,141,2.495,142,1.401,148,1.497,153,1.497,154,0.943,155,1.959,156,0.943,157,0.842,158,0.943,159,0.699,160,0.943,161,0.651,162,0.943,163,1.463,164,0.943,165,0.651,166,0.943,167,0.651,168,0.943,169,0.699,170,0.808,171,0.872,172,0.943,199,1.025,210,2.722,211,0.872,212,1.025,229,0.808,230,1.482,232,1.025,239,1.025,248,0.728,249,1.192,252,0.781,253,1.033,257,1.236,271,2.212,274,1.025,280,2.495,294,1.384,295,1.84,301,1.961,321,2.495,325,1.025,328,0.838,329,0.781,331,3.378,332,2.419,333,3.38,334,2.512,336,0.566,337,0.492,358,1.109,359,1.72,360,1.379,362,2.495,368,2.495,370,1.384,373,2.189,375,1.497,376,2.676,379,1.572,384,3.102,386,1.779,397,1.959,398,1.959,425,3.598,433,2.674,436,1.72,437,2.495,449,3.598,463,1.72,471,1.192,508,1.961,524,1.025,527,0.943,530,1.961,578,3.069,596,1.236,632,1.572,633,1.572,668,2.495,669,3.532,670,3.532,695,1.025,736,1.572,742,1.121,790,2.023,793,2.303,818,1.779,854,1.236,881,1.572,882,2.189,883,2.495,884,4.189,885,4.189,886,2.959,887,2.959,888,4.129,889,2.189,890,2.189,891,2.959,892,2.495,893,3.679,894,2.959,895,3.679,896,2.722,897,2.722,898,3.099,899,2.722,900,1.379,901,3.099,902,3.099,903,2.959,904,2.189,905,1.864,906,1.864,907,2.722,908,3.099,909,2.495,910,1.864,911,1.864,912,1.864,913,2.722,914,1.864,915,1.864,916,1.864,917,1.961,918,2.189,919,1.379,920,1.864,921,1.379,922,1.379,923,1.864,924,1.379,925,1.236,926,1.379,927,1.572,928,1.572,929,1.864,930,1.379,931,2.189,932,1.379,933,1.864,934,1.864,935,1.572,936,1.864,937,1.864,938,1.864,939,1.379,940,1.379,941,1.864,942,1.379,943,1.379,944,1.379,945,1.379,946,1.572,947,1.572,948,1.864,949,1.572,950,1.864,951,1.572,952,2.495,953,1.379,954,2.189,955,1.864,956,1.864,957,1.572,958,1.572,959,2.959,960,2.959,961,2.959,962,2.959,963,2.959,964,2.959,965,2.959,966,2.959,967,2.959,968,2.959,969,1.864,970,1.864,971,2.959,972,2.959,973,2.959,974,1.864,975,1.864]],["title/modules/PagesModule.html",[0,0.769,181,2.019]],["body/modules/PagesModule.html",[2,1.636,5,2.35,12,0.027,17,0.484,18,0.431,19,0.431,37,2.024,38,0.634,39,2.379,40,0.539,41,3.249,42,2.543,66,0.484,67,0.329,68,0.023,69,0.023,181,3.552,976,5.025]],["title/components/PasswordresetComponent.html",[105,0.769,165,1.173]],["body/components/PasswordresetComponent.html",[4,0.751,12,0.028,17,0.207,18,0.184,19,0.184,21,0.492,23,2.116,24,0.703,27,2.423,29,1.818,32,0.866,33,1.039,34,1.258,38,0.524,40,0.23,44,1.236,45,1.107,51,1.474,60,1.123,66,0.207,67,0.141,68,0.013,69,0.013,73,0.932,74,0.866,76,1.465,82,2.039,83,1.332,93,3,102,0.7,105,0.923,106,0.806,107,1.546,108,1.673,109,1.087,110,1.087,111,1.087,113,1.332,120,1.59,126,1.087,127,2.88,128,2.661,130,1.673,132,1.673,134,0.363,135,1.077,137,1.039,138,1.239,139,2.472,140,2.472,142,1.454,148,1.673,153,1.673,154,1.087,155,2.116,156,1.087,157,0.923,158,1.087,159,0.806,160,1.087,161,0.751,162,1.087,163,0.751,164,1.087,165,1.58,166,1.087,167,0.751,168,1.087,169,0.806,170,0.932,171,1.005,172,1.087,199,1.182,211,1.005,212,1.182,229,0.932,230,1.823,232,1.182,242,1.59,248,0.991,249,1.332,252,0.873,253,1.155,271,1.988,274,1.182,283,3.398,295,0.866,301,2.192,313,2.788,323,1.696,328,0.936,329,0.873,331,3.562,332,2.33,336,0.653,337,0.567,358,1.239,359,2.116,370,2.285,381,1.292,386,2.721,396,3.555,397,2.594,398,2.594,417,1.424,418,1.005,422,2.788,463,1.005,464,2.447,471,1.623,479,1.424,480,4.12,508,2.192,524,1.182,578,2.687,695,1.182,742,1.292,790,2.216,793,2.489,796,2.447,797,1.424,818,1.988,854,1.424,882,1.59,888,4.3,889,2.447,890,2.447,896,2.982,897,2.982,898,3.349,899,2.982,900,1.59,901,3.349,902,3.349,904,2.447,907,2.447,908,3.349,913,2.982,917,2.192,918,2.447,919,1.59,921,1.59,922,1.59,926,1.59,930,1.59,931,1.59,932,1.59,939,1.59,940,1.59,942,1.59,943,1.59,944,1.59,945,1.59,953,1.59,954,1.59,977,1.812,978,5.16,979,3.307,980,3.307,981,3.307,982,3.398,983,4.03,984,3.307,985,4.03,986,4.03,987,3.816,988,3.307,989,2.149,990,2.149,991,2.149,992,3.307,993,2.149,994,2.149,995,2.149,996,2.149,997,2.149,998,2.149,999,2.149,1000,2.149,1001,2.149,1002,1.812,1003,2.149,1004,2.149,1005,2.149,1006,2.149,1007,2.149,1008,2.149]],["title/modules/SharedModule.html",[0,0.769,869,2.019]],["body/modules/SharedModule.html",[2,1.636,5,2.35,12,0.027,17,0.484,18,0.431,19,0.431,37,2.024,38,0.634,39,2.379,40,0.539,41,3.249,42,2.543,66,0.484,67,0.329,68,0.023,69,0.023,869,3.552,1009,5.025]],["title/components/SignupComponent.html",[105,0.769,167,1.173]],["body/components/SignupComponent.html",[4,0.717,12,0.028,17,0.198,18,0.176,19,0.176,21,0.47,23,2.556,24,1.125,28,2.362,29,2.154,32,0.827,33,1.194,34,1.194,38,0.567,40,0.22,44,0.94,45,0.987,51,1.558,60,1.108,64,2.154,66,0.198,67,0.135,68,0.013,69,0.013,73,0.89,74,0.827,75,1.538,76,1.515,82,1.982,93,2.928,102,0.669,105,0.896,106,0.77,107,1.493,108,1.615,109,1.039,110,1.039,111,1.039,113,1.286,120,1.519,126,1.039,127,2.841,128,2.625,130,1.615,132,1.615,134,0.347,135,1.039,137,0.94,138,0.77,139,2.235,140,2.235,142,1.411,148,1.615,153,1.615,154,1.039,155,2.065,156,1.039,157,0.896,158,1.039,159,0.77,160,1.039,161,0.717,162,1.039,163,0.717,164,1.039,165,0.717,166,1.039,167,1.543,168,1.039,169,0.77,170,0.89,171,0.96,172,1.039,199,1.129,210,2.898,211,0.96,212,1.129,229,0.89,230,1.577,232,1.129,239,2.154,248,0.963,249,1.286,252,0.843,253,1.115,257,1.361,271,2.355,274,2.154,287,1.915,295,0.827,301,2.116,325,2.154,328,0.904,329,0.843,331,3.504,332,2.292,336,0.624,337,0.542,358,1.197,359,2.237,360,1.519,370,1.493,381,1.234,382,1.731,386,2.656,395,1.361,417,1.361,418,0.96,434,4.458,435,4.271,436,0.96,463,0.96,471,1.577,475,2.116,484,2.898,508,2.116,524,1.129,527,1.039,530,2.116,578,3.006,596,1.361,630,1.519,695,1.129,721,2.362,742,1.234,790,2.154,793,2.429,797,1.361,818,1.919,854,1.361,882,2.898,883,2.692,888,4.246,889,2.362,890,2.362,892,2.692,896,2.898,897,2.898,898,3.268,899,2.898,900,1.519,901,3.268,902,3.268,904,2.362,907,2.898,908,2.362,909,2.692,913,2.898,917,2.116,918,2.362,919,1.519,921,1.519,922,1.519,924,1.519,925,1.361,926,1.519,927,1.731,928,1.731,930,1.519,931,2.898,932,1.519,939,1.519,940,1.519,942,1.519,943,1.519,944,1.519,945,1.519,946,1.731,947,1.731,949,1.731,951,1.731,952,1.731,953,1.519,954,2.362,957,1.731,958,1.731,982,3.302,987,3.725,1002,1.731,1010,1.731,1011,2.692,1012,2.692,1013,2.692,1014,3.916,1015,3.192,1016,3.916,1017,3.916,1018,3.916,1019,2.928,1020,3.192,1021,2.053,1022,2.053,1023,2.053,1024,2.692,1025,3.916,1026,2.053,1027,2.053,1028,2.053,1029,2.053,1030,2.053,1031,1.731,1032,2.053,1033,2.053,1034,2.053,1035,2.053,1036,2.053,1037,4.417,1038,2.053]],["title/modules/UiModule.html",[0,0.769,391,2.019]],["body/modules/UiModule.html",[2,1.636,5,2.35,12,0.027,17,0.484,18,0.431,19,0.431,37,2.024,38,0.634,39,2.379,40,0.539,41,3.249,42,2.543,66,0.484,67,0.329,68,0.023,69,0.023,391,3.552,1039,5.025]],["title/classes/User.html",[67,0.22,448,1.571]],["body/classes/User.html",[12,0.027,17,0.425,18,0.379,19,0.379,66,0.425,67,0.29,68,0.022,69,0.022,134,0.746,135,1.78,137,1.401,138,2.554,142,1.619,337,1.715,436,2.776,448,2.557,463,2.776,543,3.935,630,4.393,657,5.006,660,5.006,662,5.006,718,3.27,917,3.624,1040,3.727,1041,4.42,1042,4.42,1043,4.42,1044,4.42,1045,4.42,1046,4.42,1047,4.42]],["title/injectables/UserProfileService.html",[352,1.02,1019,2.226]],["body/injectables/UserProfileService.html",[12,0.028,17,0.282,18,0.251,19,0.251,21,1.107,24,1.361,25,1.803,29,3.444,33,0.885,34,1.314,38,0.519,40,0.314,43,1.27,44,1.029,45,1.057,60,1.273,66,0.282,67,0.192,68,0.016,69,0.016,75,1.804,79,3.078,80,2.757,83,2.12,121,2.288,129,1.483,134,0.495,137,0.885,142,1.19,157,0.952,196,3.828,197,1.612,221,3.685,246,1.945,247,3.078,248,1.295,249,2.522,252,1.098,258,2.501,287,2.575,294,1.945,323,2.165,328,1.178,329,0.774,336,1.263,337,1.098,352,1.263,357,1.612,370,2.701,418,2.262,442,1.762,448,2.839,451,3.078,455,2.757,474,3.078,475,3.489,479,3.489,492,2.168,493,2.168,510,2.471,515,3.165,529,1.762,530,3.937,642,3.508,721,3.078,730,3.508,1011,3.508,1012,3.508,1019,3.489,1024,3.508,1031,3.508,1048,2.471,1049,4.16,1050,4.16,1051,5.265,1052,5.265,1053,2.93,1054,2.93,1055,5.265,1056,5.776,1057,4.16,1058,4.16,1059,4.16,1060,4.16,1061,4.16,1062,2.93,1063,4.16,1064,4.16,1065,2.93,1066,2.93]],["title/components/VerticalComponent.html",[105,0.769,169,1.259]],["body/components/VerticalComponent.html",[4,0.96,12,0.027,17,0.265,18,0.235,19,0.235,21,0.629,23,2.725,24,1.24,30,2.185,31,2.185,33,1.088,34,1.294,38,0.295,40,0.295,44,1.33,45,1.008,54,2.633,60,0.921,66,0.265,67,0.18,68,0.016,69,0.016,75,1.206,76,1.576,99,1.722,102,0.895,105,1.068,106,1.03,107,1.858,108,2.01,109,2.01,110,1.39,111,1.39,113,2.347,126,1.39,127,3.077,128,2.843,130,2.01,132,2.01,134,0.464,142,1.257,144,1.821,145,1.821,148,2.361,149,2.633,150,2.388,151,1.821,153,2.01,154,1.39,155,2.39,156,1.39,157,0.909,158,1.39,159,1.03,160,1.39,161,0.96,162,1.39,163,0.96,164,1.39,165,0.96,166,1.39,167,0.96,168,1.39,169,1.916,170,2.526,171,1.285,172,1.39,186,2.939,237,2.182,239,2.185,248,1.148,308,2.805,325,3.108,326,3.35,328,1.125,329,1.232,358,1.489,375,2.587,404,1.821,432,2.939,471,2.059,506,3.35,656,2.317,784,3.388,789,2.633,790,2.566,793,2.811,796,2.939,797,2.633,798,3.35,799,3.35,800,3.35,803,4.31,804,2.317,806,2.033,807,2.317,808,2.317,810,2.939,812,3.934,813,2.317,817,3.934,818,2.388,830,3.783,935,3.35,1067,2.317,1068,3.973,1069,3.973,1070,4.666,1071,3.973,1072,4.666,1073,5.112,1074,2.748,1075,2.748,1076,2.748,1077,4.666,1078,4.666,1079,4.666,1080,4.666,1081,2.748,1082,2.748,1083,2.748,1084,3.973,1085,3.973,1086,3.973,1087,3.973,1088,3.973,1089,3.973,1090,2.748,1091,2.748,1092,2.748,1093,2.748,1094,2.748,1095,2.748,1096,2.748,1097,2.748]],["title/coverage.html",[1098,3.857]],["body/coverage.html",[12,0.027,19,0.32,67,0.322,68,0.019,69,0.019,105,1.45,106,1.398,112,3.145,137,0.793,159,1.398,161,1.303,163,1.303,165,1.303,167,1.303,169,1.398,182,2.242,183,2.242,184,2.242,185,2.76,211,2.294,222,2.472,250,2.242,253,1.303,267,2.76,277,2.472,316,2.76,318,3.145,332,1.617,334,2.051,352,1.769,443,3.145,448,1.744,487,2.472,502,3.145,554,3.634,556,3.145,582,2.242,583,2.472,585,3.252,591,2.242,612,3.145,613,3.145,695,3.483,716,5.534,717,2.472,719,4.31,776,2.76,782,3.145,819,3.145,829,3.145,850,2.76,851,2.76,881,3.145,977,3.145,1010,3.145,1019,2.472,1040,3.145,1048,3.145,1067,3.145,1098,3.145,1099,3.73,1100,3.73,1101,3.73,1102,4.906,1103,4.906,1104,3.73,1105,3.73,1106,5.483,1107,3.73,1108,6.052,1109,5.483,1110,3.73,1111,6.052,1112,4.906,1113,4.906,1114,5.825,1115,3.73,1116,3.73,1117,3.73,1118,4.906,1119,3.73,1120,3.73,1121,3.73,1122,4.137,1123,3.73,1124,3.73,1125,3.145,1126,3.145,1127,3.73,1128,3.73]],["title/dependencies.html",[3,2.043,1129,2.079]],["body/dependencies.html",[3,2.357,6,3.106,12,0.028,40,0.5,42,2.357,68,0.022,69,0.022,73,2.019,192,4.762,193,4.178,199,2.562,205,4.178,206,3.928,208,3.928,209,3.928,229,2.019,406,3.447,407,3.928,525,2.357,1130,4.659,1131,6.716,1132,4.659,1133,4.659,1134,4.659,1135,4.659,1136,4.659,1137,4.659,1138,4.659,1139,4.659,1140,4.659,1141,4.659,1142,4.659,1143,4.659,1144,4.659,1145,4.659]],["title/miscellaneous/functions.html",[1146,1.545,1147,3.404]],["body/miscellaneous/functions.html",[12,0.025,21,1.1,24,1.224,45,1.078,60,1.216,68,0.023,69,0.023,76,1.269,96,3.185,134,0.811,137,1.022,146,3.185,157,1.1,185,3.556,196,4.082,201,5.193,205,3.556,207,4.052,221,3.185,231,3.185,239,2.643,240,4.052,241,4.052,242,3.556,243,4.052,244,4.052,245,4.052,247,3.556,248,1.182,249,1.935,251,4.052,267,4.257,336,1.459,337,1.269,1146,2.643,1147,4.052,1148,4.805]],["title/index.html",[134,0.474,1149,2.81,1150,2.81]],["body/index.html",[12,0.021,16,2.332,18,0.363,68,0.021,69,0.021,105,1.334,115,3.862,157,0.971,238,5.154,253,1.481,358,1.589,375,2.146,406,4.828,504,3.575,637,4.493,675,3.575,681,3.575,826,3.575,924,3.137,1013,4.493,1129,3.137,1151,4.24,1152,5.328,1153,4.24,1154,5.827,1155,3.575,1156,4.24,1157,4.24,1158,6.298,1159,4.24,1160,4.24,1161,4.24,1162,4.24,1163,4.24,1164,4.24,1165,4.24,1166,4.24,1167,4.24,1168,4.24,1169,5.827,1170,5.827,1171,4.24,1172,6.113,1173,4.24,1174,4.24,1175,4.24,1176,4.24,1177,5.328,1178,5.328,1179,5.328,1180,4.24,1181,6.428,1182,4.24,1183,4.24,1184,4.24,1185,5.328,1186,4.24,1187,4.24,1188,4.24,1189,4.24,1190,5.827,1191,4.24,1192,4.24,1193,3.137,1194,4.24]],["title/modules.html",[2,1.489]],["body/modules.html",[1,3.201,2,1.572,11,2.903,12,0.023,13,2.656,68,0.023,69,0.023,173,3.201,179,2.903,180,2.903,181,2.903,193,4.731,390,2.903,391,2.903,827,5.593,869,2.903,1195,6.394,1196,6.394,1197,6.837,1198,6.632]],["title/overview.html",[1193,3.384]],["body/overview.html",[0,0.847,1,4.11,2,1.205,3,1.873,4,1.293,5,1.731,6,2.036,7,2.226,8,1.731,9,3.121,10,3.121,11,3.284,12,0.027,13,3.677,14,2.935,15,2.036,16,2.036,63,1.605,68,0.019,69,0.019,106,2.37,107,1.731,159,2.37,161,1.908,163,1.908,165,1.908,167,1.908,169,2.37,173,4.503,174,3.121,175,3.121,176,3.121,177,3.121,178,3.121,179,3.284,180,4.02,181,3.284,182,3.284,183,3.284,184,3.284,316,2.739,387,3.121,388,3.121,389,3.121,390,3.284,391,3.284,442,2.226,582,2.226,693,4.117,718,2.739,865,3.121,866,3.121,867,3.121,868,3.121,869,3.284,1193,2.739,1199,3.702,1200,3.702,1201,4.882,1202,3.702]],["title/properties.html",[135,1.314,1129,2.079]],["body/properties.html",[12,0.026,68,0.024,69,0.024,135,1.747,1155,4.523,1203,5.365]],["title/routes.html",[63,1.983]],["body/routes.html",[12,0.024,63,2.344,68,0.024,69,0.024]],["title/miscellaneous/typealiases.html",[1146,1.545,1204,4.037]],["body/miscellaneous/typealiases.html",[12,0.024,68,0.024,69,0.024,134,0.894,137,1.126,250,3.182,585,3.508,590,4.506,1146,2.911,1205,5.293,1206,5.293]],["title/miscellaneous/variables.html",[925,2.676,1146,1.545]],["body/miscellaneous/variables.html",[12,0.028,34,0.813,45,0.842,68,0.02,69,0.02,74,1.54,83,1.54,134,0.645,137,1.298,138,1.869,139,3.224,140,3.224,170,1.657,211,2.75,222,3.305,252,1.317,253,1.335,274,2.103,323,1.433,324,2.829,386,2.299,457,3.305,487,3.305,524,2.103,609,3.69,717,3.678,719,2.829,731,3.224,733,4.205,774,3.224,775,3.224,776,4.629,777,3.224,778,3.224,779,3.224,780,3.224,781,3.224,783,2.534,850,3.69,851,3.69,925,2.534,1122,3.224,1125,3.224,1126,3.224,1146,2.103,1207,5.55,1208,3.823,1209,3.823,1210,4.987,1211,4.987,1212,4.987,1213,4.987,1214,4.987,1215,4.987,1216,4.987,1217,4.987,1218,4.987,1219,4.987,1220,4.987,1221,4.987]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":716,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1203,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":693,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"overview.html":{}}}],["1/1",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["10.6.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["123456",{"_index":633,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["15.0.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["15.1.2",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["17.0.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["17.0.2",{"_index":1156,"title":{},"body":{"index.html":{}}}],["18",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1202,"title":{},"body":{"overview.html":{}}}],["2.11.6",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["2/11",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":652,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["2023",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["3/6",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1201,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":666,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["401",{"_index":572,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["5.2.3",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["_firebasebackend",{"_index":776,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_handleerror",{"_index":727,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["_handleerror(error",{"_index":743,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["accesseur",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":508,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["accordée",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{}}}],["account",{"_index":22,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppRoutingModule.html":{}}}],["accountmodule",{"_index":1,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountroutingmodule",{"_index":11,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["accéder",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["actif",{"_index":843,"title":{},"body":{"components/LayoutComponent.html":{}}}],["actions",{"_index":432,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["activatedroute",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["activatedroutesnapshot",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1079,"title":{},"body":{"components/VerticalComponent.html":{}}}],["activée",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["actuel",{"_index":853,"title":{},"body":{"components/LayoutComponent.html":{}}}],["actuelle",{"_index":524,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["actuellement",{"_index":456,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["adapter",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["add",{"_index":826,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["admin",{"_index":631,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["admin@sogapeint.corp",{"_index":632,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["affichage",{"_index":1087,"title":{},"body":{"components/VerticalComponent.html":{}}}],["afficher",{"_index":787,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["afterviewinit",{"_index":982,"title":{},"body":{"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["ainsi",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ajustements",{"_index":1068,"title":{},"body":{"components/VerticalComponent.html":{}}}],["alertes",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["aliases",{"_index":1205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":706,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["angular",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/LayoutsModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":42,"title":{},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserProfileService.html":{}}}],["angular/compiler",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":73,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["api",{"_index":575,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["apikey",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["app.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":106,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":681,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["appmodule",{"_index":173,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["approutingmodule",{"_index":179,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["après",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["array",{"_index":621,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["arrête",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["artifacts",{"_index":1173,"title":{},"body":{"index.html":{}}}],["aspects",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/i18n",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["associée",{"_index":36,"title":{},"body":{"modules/AccountModule.html":{}}}],["assure",{"_index":777,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["assurer",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["attributs",{"_index":798,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["au",{"_index":48,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aucun",{"_index":458,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["auth",{"_index":87,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AuthModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AccountModule.html":{}}}],["authdomain",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":639,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authentication",{"_index":430,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authenticationservice",{"_index":332,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authentifi",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["authfackservice",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["authfakeauthenticationservice",{"_index":334,"title":{"injectables/AuthfakeauthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":277,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":13,"title":{"modules/AuthModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorised",{"_index":684,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authorization",{"_index":825,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authroutingmodule",{"_index":390,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authutils",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["auto",{"_index":573,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["automatically",{"_index":1163,"title":{},"body":{"index.html":{}}}],["autorisation",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["autres",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["aux",{"_index":27,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{}}}],["available",{"_index":827,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"modules.html":{}}}],["avec",{"_index":83,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"injectables/UserProfileService.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":599,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["backend",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["backend.ts",{"_index":613,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["backend.ts:11",{"_index":615,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["backend.ts:7",{"_index":614,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["bad",{"_index":667,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["balises",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{}}}],["barre",{"_index":803,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["basculement",{"_index":1084,"title":{},"body":{"components/VerticalComponent.html":{}}}],["base",{"_index":61,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"modules/LayoutsModule.html":{}}}],["bdd",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["bearer",{"_index":683,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["behaviorsubject",{"_index":519,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":534,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["bg",{"_index":1092,"title":{},"body":{"components/VerticalComponent.html":{}}}],["body",{"_index":656,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/VerticalComponent.html":{}}}],["boolean",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"components/LayoutComponent.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["bouton",{"_index":1078,"title":{},"body":{"components/VerticalComponent.html":{}}}],["broadcast",{"_index":593,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["broadcast(type",{"_index":594,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["browse",{"_index":1197,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":856,"title":{},"body":{"components/LayoutComponent.html":{}}}],["build",{"_index":1172,"title":{},"body":{"index.html":{}}}],["c'est",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["call",{"_index":598,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["callback",{"_index":597,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["canactivate",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1188,"title":{},"body":{"index.html":{}}}],["cas",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["catch((error",{"_index":768,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["catch(error",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["catcherror",{"_index":569,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ce",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"modules/LayoutsModule.html":{},"injectables/UserProfileService.html":{}}}],["ces",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["cette",{"_index":1069,"title":{},"body":{"components/VerticalComponent.html":{}}}],["change",{"_index":1165,"title":{},"body":{"index.html":{}}}],["changement",{"_index":862,"title":{},"body":{"components/LayoutComponent.html":{}}}],["changements",{"_index":832,"title":{},"body":{"components/LayoutComponent.html":{}}}],["changer",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["chargement",{"_index":84,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["chargements",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["charger",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["chargeur",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["check",{"_index":675,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["chemin",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["choice",{"_index":1184,"title":{},"body":{"index.html":{}}}],["ci",{"_index":439,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["class",{"_index":67,"title":{"classes/FirebaseAuthBackend.html":{},"classes/User.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"coverage.html":{}}}],["classe",{"_index":720,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["classes",{"_index":718,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":1154,"title":{},"body":{"index.html":{}}}],["clic",{"_index":1077,"title":{},"body":{"components/VerticalComponent.html":{}}}],["cluster_accountmodule",{"_index":9,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":10,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule",{"_index":865,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_declarations",{"_index":868,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_exports",{"_index":867,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_imports",{"_index":866,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["code",{"_index":1167,"title":{},"body":{"index.html":{}}}],["collpsed",{"_index":1096,"title":{},"body":{"components/VerticalComponent.html":{}}}],["command",{"_index":1185,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":41,"title":{},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{}}}],["commun",{"_index":59,"title":{},"body":{"modules/AccountModule.html":{},"modules/LayoutsModule.html":{}}}],["communique",{"_index":981,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["component",{"_index":105,"title":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["components",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"overview.html":{}}}],["composant",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["composants",{"_index":53,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["compris",{"_index":31,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/VerticalComponent.html":{}}}],["compte",{"_index":49,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["comptes",{"_index":28,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/SignupComponent.html":{}}}],["config",{"_index":778,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":74,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{}}}],["configure",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["configurer",{"_index":809,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["connect",{"_index":459,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["connecte",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["connecter",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{}}}],["connectez",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["connexion",{"_index":376,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{}}}],["conserver",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{}}}],["const",{"_index":81,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"interceptors/JwtInterceptor.html":{}}}],["constantes",{"_index":848,"title":{},"body":{"components/LayoutComponent.html":{}}}],["constructeur",{"_index":730,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"injectables/UserProfileService.html":{}}}],["constructor",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["constructor(authenticationservice",{"_index":558,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["constructor(eventservice",{"_index":839,"title":{},"body":{"components/LayoutComponent.html":{}}}],["constructor(firebaseconfig",{"_index":728,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["constructor(formbuilder",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(http",{"_index":510,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"injectables/UserProfileService.html":{}}}],["constructor(private",{"_index":529,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"injectables/UserProfileService.html":{}}}],["constructor(router",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contenant",{"_index":1058,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["contrôles",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["core/guards/auth.guard",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/helpers/error.interceptor",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["core/helpers/fake",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["core/helpers/jwt.interceptor",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/auth.service",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["core/services/authfake.service",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["core/services/event.service",{"_index":847,"title":{},"body":{"components/LayoutComponent.html":{}}}],["core/services/user.service",{"_index":1032,"title":{},"body":{"components/SignupComponent.html":{}}}],["corps",{"_index":799,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["coverage",{"_index":1098,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtranslateloader",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["création",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["créer",{"_index":1011,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["css",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["currentuser",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currentuser.token",{"_index":822,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentusersubject",{"_index":507,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["currentuservalue",{"_index":509,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["custom_elements_schema",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["d'ancrage",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["d'angular",{"_index":62,"title":{},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{}}}],["d'authentification",{"_index":51,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["d'autres",{"_index":103,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["d'environnement",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{}}}],["d'erreur",{"_index":747,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["d'inscription",{"_index":434,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SignupComponent.html":{}}}],["d'interface",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{}}}],["d'un",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["d'url",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["d'utilisateurs",{"_index":1060,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["dans",{"_index":102,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["dark",{"_index":808,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["data",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["databaseurl",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().getfullyear",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["de",{"_index":45,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["default",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["dehors",{"_index":880,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["delay",{"_index":617,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delayed",{"_index":635,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delete",{"_index":715,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["demande",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PasswordresetComponent.html":{}}}],["demander",{"_index":979,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["demandée",{"_index":842,"title":{},"body":{"components/LayoutComponent.html":{}}}],["demandés",{"_index":833,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dematerialize",{"_index":620,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["depuis",{"_index":736,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{}}}],["des",{"_index":75,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["description",{"_index":21,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/EventService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["dessus",{"_index":440,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["details",{"_index":650,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["dev",{"_index":1160,"title":{},"body":{"index.html":{}}}],["development",{"_index":1157,"title":{},"body":{"index.html":{}}}],["différentes",{"_index":872,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["différents",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["digital",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["directive",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["directives",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1171,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1176,"title":{},"body":{"index.html":{}}}],["disponible",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["disposition",{"_index":789,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/VerticalComponent.html":{}}}],["dispositions",{"_index":873,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["dispositions/layout",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["dist",{"_index":1175,"title":{},"body":{"index.html":{}}}],["document",{"_index":800,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["document.body.classlist.remove('auth",{"_index":1091,"title":{},"body":{"components/VerticalComponent.html":{}}}],["document.body.classlist.toggle('sidebar",{"_index":1093,"title":{},"body":{"components/VerticalComponent.html":{}}}],["document.body.classlist.toggle('vertical",{"_index":1095,"title":{},"body":{"components/VerticalComponent.html":{}}}],["document.body.removeattribute('data",{"_index":812,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["document.body.setattribute('data",{"_index":806,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["documentation",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["doit",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["dom",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["donn",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["donnée",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["données",{"_index":530,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["droite",{"_index":1082,"title":{},"body":{"components/VerticalComponent.html":{}}}],["du",{"_index":44,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["duplicateuser",{"_index":703,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["dynamic",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["déclaration",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["déclare",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutsModule.html":{}}}],["déclarés",{"_index":57,"title":{},"body":{"modules/AccountModule.html":{}}}],["déconnecte",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["déconnexion",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["défilement",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["définies",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["définir",{"_index":811,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["définissant",{"_index":801,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["définit",{"_index":77,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"classes/FirebaseAuthBackend.html":{}}}],["démarrage",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["désactive",{"_index":1080,"title":{},"body":{"components/VerticalComponent.html":{}}}],["détails",{"_index":467,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["détermine",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"components/LayoutComponent.html":{}}}],["déterminer",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{}}}],["développement",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["e",{"_index":669,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["e2e",{"_index":1182,"title":{},"body":{"index.html":{}}}],["effectue",{"_index":513,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["effectuer",{"_index":796,"title":{},"body":{"components/HorizontalComponent.html":{},"components/PasswordresetComponent.html":{},"components/VerticalComponent.html":{}}}],["element",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["email",{"_index":463,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["en",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"components/HorizontalComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["enable",{"_index":1094,"title":{},"body":{"components/VerticalComponent.html":{}}}],["end",{"_index":1181,"title":{},"body":{"index.html":{}}}],["enfants",{"_index":95,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["englobe",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["enregistre",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"injectables/UserProfileService.html":{}}}],["enregistrement",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["enregistrer",{"_index":1024,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["entre",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["environment",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.defaultauth",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["environments/environment",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["envoie",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/PasswordresetComponent.html":{},"injectables/UserProfileService.html":{}}}],["envoyer",{"_index":992,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["err.error.message",{"_index":579,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":571,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":580,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["erreur",{"_index":745,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["erreurs",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["error",{"_index":578,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["error.message",{"_index":773,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["errorinterceptor",{"_index":182,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":772,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["est",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["et",{"_index":33,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["etc",{"_index":874,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["event",{"_index":583,"title":{"interfaces/Event.html":{}},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["event.payload",{"_index":606,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["event.type",{"_index":603,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["eventcallback",{"_index":590,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"miscellaneous/typealiases.html":{}}}],["eventservice",{"_index":591,"title":{"injectables/EventService.html":{}},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["execute",{"_index":1179,"title":{},"body":{"index.html":{}}}],["export",{"_index":66,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["exportation",{"_index":441,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["exporte",{"_index":92,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{}}}],["exécuter",{"_index":1002,"title":{},"body":{"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["f",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["faciliter",{"_index":1003,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["fackbackend",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":654,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["fakebackendinterceptor",{"_index":183,"title":{"interceptors/FakeBackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["false",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["faux",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{}}}],["fichiers",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["fictif",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["fictive",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"coverage.html":{}}}],["files",{"_index":1166,"title":{},"body":{"index.html":{}}}],["filter",{"_index":589,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["filter(event",{"_index":602,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["filteredusers",{"_index":643,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["filteredusers.length",{"_index":649,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["filteredusers[0",{"_index":655,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["find",{"_index":688,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["fins",{"_index":503,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["firebase",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["firebase.auth().createuserwithemailandpassword(email",{"_index":757,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.auth().currentuser",{"_index":759,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.auth().onauthstatechanged((user",{"_index":752,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.auth().sendpasswordresetemail(email",{"_index":763,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.auth().signinwithemailandpassword(email",{"_index":762,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.auth().signout().then",{"_index":769,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase.initializeapp(firebaseconfig",{"_index":751,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase/compat/app",{"_index":748,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase/compat/auth",{"_index":749,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebase/compat/firestore",{"_index":750,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["firebaseauthbackend",{"_index":717,"title":{"classes/FirebaseAuthBackend.html":{}},"body":{"classes/FirebaseAuthBackend.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseauthbackend(config",{"_index":780,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["firebaseconfig",{"_index":733,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["firstname",{"_index":660,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"classes/User.html":{}}}],["fonction",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["fonctionnalités",{"_index":25,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"injectables/UserProfileService.html":{}}}],["forchild",{"_index":94,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["forgetpassword",{"_index":722,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["formbuilder",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["formulaire",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["formulaires",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["fournie",{"_index":732,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["fournies",{"_index":1063,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["fournir",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{}}}],["fournis",{"_index":65,"title":{},"body":{"modules/AccountModule.html":{}}}],["fournit",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"modules/LayoutsModule.html":{},"injectables/UserProfileService.html":{}}}],["function",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1147,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1189,"title":{},"body":{"index.html":{}}}],["galement",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["garde",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gardes",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["generate",{"_index":1169,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1153,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["getall",{"_index":1052,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["getauthenticateduser",{"_index":723,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["getcurrentuservalue",{"_index":521,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["getf",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["getfirebasebackend",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfirebasebackend().forgetpassword(email).then((response",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfirebasebackend().getauthenticateduser",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfirebasebackend().loginuser(email",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfirebasebackend().logout",{"_index":501,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfirebasebackend().registeruser(email",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":1149,"title":{"index.html":{}},"body":{}}],["globale",{"_index":805,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{}}}],["go",{"_index":1192,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1198,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":316,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gère",{"_index":23,"title":{},"body":{"modules/AccountModule.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["gérer",{"_index":437,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{}}}],["handler",{"_index":592,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["header",{"_index":676,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["help",{"_index":1190,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":783,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"miscellaneous/variables.html":{}}}],["horizontal'},{'name",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["horizontal.component.html",{"_index":792,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["horizontal.component.scss",{"_index":791,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["horizontal/horizontal.component",{"_index":878,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["horizontalcomponent",{"_index":159,"title":{"components/HorizontalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontale",{"_index":785,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["http",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1162,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["httpclient",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":566,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":563,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":567,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":561,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpresponse",{"_index":616,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["ici",{"_index":58,"title":{},"body":{"modules/AccountModule.html":{}}}],["id",{"_index":657,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"classes/User.html":{}}}],["identifiants",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{}}}],["identifier",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{}}}],["implemented",{"_index":678,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["implements",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["import('./account/account.module').then(m",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then(m",{"_index":89,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["import('./extrapages/extrapages.module').then(m",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then(m",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importation",{"_index":43,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"injectables/UserProfileService.html":{}}}],["importe",{"_index":91,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{}}}],["incorecte",{"_index":671,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["index",{"_index":134,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["informations",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{}}}],["initfirebasebackend",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthBackend.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initfirebasebackend(environment.firebaseconfig",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["initiale",{"_index":854,"title":{},"body":{"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["initialisation",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["initialise",{"_index":731,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":352,"title":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/EventService.html":{},"injectables/UserProfileService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/EventService.html":{},"injectables/UserProfileService.html":{},"overview.html":{}}}],["instance",{"_index":774,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["insérer",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["interactions",{"_index":506,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"components/VerticalComponent.html":{}}}],["interagir",{"_index":1049,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["interagit",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["intercept",{"_index":557,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":560,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercepteurs",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor",{"_index":554,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":555,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interface",{"_index":582,"title":{"interfaces/Event.html":{}},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":584,"title":{},"body":{"interfaces/Event.html":{}}}],["internationale",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["invalid",{"_index":685,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["invalide",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["ishorizontallayoutrequested",{"_index":837,"title":{},"body":{"components/LayoutComponent.html":{}}}],["isoler",{"_index":438,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["isverticallayoutrequested",{"_index":838,"title":{},"body":{"components/LayoutComponent.html":{}}}],["jour",{"_index":550,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"components/LayoutComponent.html":{}}}],["json",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":629,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["json.parse(sessionstorage.getitem('authuser",{"_index":771,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["json.stringify(user",{"_index":547,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["json.stringify(users",{"_index":713,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["jwt",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["jwtinterceptor",{"_index":184,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":1180,"title":{},"body":{"index.html":{}}}],["l'accès",{"_index":1004,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["l'adresse",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["l'affichage",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["l'aide",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{}}}],["l'année",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["l'application",{"_index":99,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/VerticalComponent.html":{}}}],["l'attribut",{"_index":815,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{}}}],["l'authentification",{"_index":32,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["l'email",{"_index":464,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/PasswordresetComponent.html":{}}}],["l'enregistrement",{"_index":721,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["l'ensemble",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["l'environnement",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["l'exécution",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["l'initialisation",{"_index":797,"title":{},"body":{"components/HorizontalComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["l'inscription",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{}}}],["l'instance",{"_index":779,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["l'interface",{"_index":788,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["l'intégration",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["l'observable",{"_index":551,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["l'obtention",{"_index":1050,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["l'url",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{}}}],["l'utilisateur",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"injectables/UserProfileService.html":{}}}],["l'utilisation",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["l'écran",{"_index":1089,"title":{},"body":{"components/VerticalComponent.html":{}}}],["l'état",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{}}}],["l'événement",{"_index":861,"title":{},"body":{"components/LayoutComponent.html":{}}}],["l\\'adresse",{"_index":668,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["la",{"_index":34,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/variables.html":{}}}],["lancer",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["largeur",{"_index":1088,"title":{},"body":{"components/VerticalComponent.html":{}}}],["lastname",{"_index":662,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"classes/User.html":{}}}],["latérale",{"_index":817,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["layout",{"_index":810,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["layout'},{'name",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["layout.component.html",{"_index":835,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":834,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/layout.component",{"_index":879,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["layout_horizontal",{"_index":851,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout_vertical",{"_index":850,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["layoutcomponent",{"_index":161,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layouts",{"_index":871,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["layouts.model",{"_index":852,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layouts/layout/layout.component",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layouts/layouts.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutsmodule",{"_index":180,"title":{"modules/LayoutsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LayoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["layouttype",{"_index":836,"title":{},"body":{"components/LayoutComponent.html":{}}}],["lazy",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["le",{"_index":76,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"overview.html":{}}}],["length",{"_index":628,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["lequel",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["les",{"_index":24,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["leur",{"_index":980,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["leurs",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["light",{"_index":858,"title":{},"body":{"components/LayoutComponent.html":{}}}],["line",{"_index":626,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["liste",{"_index":1051,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["liées",{"_index":26,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["liés",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{}}}],["loadchildren",{"_index":88,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["loader",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loading",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PasswordresetComponent.html":{}}}],["local",{"_index":542,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["localement",{"_index":532,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":552,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["localstorage.setitem('currentuser",{"_index":546,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["localstorage.setitem('users",{"_index":712,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["location.reload",{"_index":577,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["login",{"_index":433,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["login(email",{"_index":460,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["login.component.html",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":163,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":724,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["logique",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["logout",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FirebaseAuthBackend.html":{}}}],["lors",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PasswordresetComponent.html":{}}}],["léments",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{}}}],["m.accountmodule",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":90,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["m.extrapagesmodule",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":670,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["map",{"_index":526,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["map(event",{"_index":605,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["matchedusers",{"_index":696,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matchedusers.length",{"_index":697,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matchedusers[0",{"_index":698,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matching",{"_index":69,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materialize",{"_index":619,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["max",{"_index":627,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["measurementid",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":1085,"title":{},"body":{"components/VerticalComponent.html":{}}}],["mergemap",{"_index":618,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["message",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{}}}],["messages",{"_index":1025,"title":{},"body":{"components/SignupComponent.html":{}}}],["messagingsenderid",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":517,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["metadata",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["methods",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{}}}],["miscellaneous",{"_index":1146,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":784,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/VerticalComponent.html":{}}}],["mobile",{"_index":1086,"title":{},"body":{"components/VerticalComponent.html":{}}}],["mode",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{}}}],["models/auth.models",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/UserProfileService.html":{}}}],["module",{"_index":0,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"injectables/UserProfileService.html":{}}}],["moi",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["more",{"_index":1191,"title":{},"body":{"index.html":{}}}],["mot",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{}}}],["multi",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["méthode",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{}}}],["n'avez",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["n'est",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["n\\'avez",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1161,"title":{},"body":{"index.html":{}}}],["navigateur",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["navigation",{"_index":35,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppRoutingModule.html":{}}}],["naviguer",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ne",{"_index":672,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["need",{"_index":1186,"title":{},"body":{"index.html":{}}}],["new",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":700,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["newuser.id",{"_index":709,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["newuser.username",{"_index":705,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["newuser.username).length",{"_index":704,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["next",{"_index":562,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["next.handle(request",{"_index":828,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":570,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":987,"title":{},"body":{"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["ngbalertmodule",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["ngmodule",{"_index":39,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{}}}],["ngoninit",{"_index":793,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["ngx",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["nouveaux",{"_index":1012,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["nouvel",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["null",{"_index":457,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["nécessaire",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{},"components/HorizontalComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["nécessaires",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["object",{"_index":609,"title":{},"body":{"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":515,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserProfileService.html":{}}}],["obtenir",{"_index":1057,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["obtient",{"_index":781,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["of(new",{"_index":664,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["of(null).pipe(mergemap",{"_index":638,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["ok",{"_index":653,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["oninit",{"_index":790,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["onsettingsbuttonclicked",{"_index":1072,"title":{},"body":{"components/VerticalComponent.html":{}}}],["onsubmit",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["ontogglemobilemenu",{"_index":1073,"title":{},"body":{"components/VerticalComponent.html":{}}}],["optional",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["opérations",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ou",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["oubli",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"index.html":{},"overview.html":{}}}],["outils",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["overview",{"_index":1193,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1129,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/VerticalComponent.html":{},"index.html":{}}}],["pages",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/pages.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["pagesmodule",{"_index":181,"title":{"modules/PagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["panneau",{"_index":1081,"title":{},"body":{"components/VerticalComponent.html":{}}}],["par",{"_index":96,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["param",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"classes/FirebaseAuthBackend.html":{},"injectables/UserProfileService.html":{}}}],["parameters",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["paramètres",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/VerticalComponent.html":{}}}],["paresseux",{"_index":85,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["parseint(urlparts[urlparts.length",{"_index":692,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["partag",{"_index":875,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["partagés",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["parties",{"_index":104,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pas",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["passe",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{}}}],["passerez",{"_index":673,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["password",{"_index":436,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["password).then((response",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password).then((user",{"_index":758,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["passwordreset",{"_index":978,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["passwordreset'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["passwordreset.component.html",{"_index":984,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["passwordreset.component.scss",{"_index":983,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["passwordreset/passwordreset.component",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["passwordresetcomponent",{"_index":165,"title":{"components/PasswordresetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":86,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["payload",{"_index":586,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["permet",{"_index":422,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordresetComponent.html":{}}}],["permettant",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["personnalisées",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["personnalisés",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["peut",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["peuvent",{"_index":55,"title":{},"body":{"modules/AccountModule.html":{}}}],["pipe(first",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["pipe(map(user",{"_index":539,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["platform",{"_index":1183,"title":{},"body":{"index.html":{}}}],["point",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["popperjs/core",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["post",{"_index":642,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"injectables/UserProfileService.html":{}}}],["pour",{"_index":60,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["principal",{"_index":98,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["principale",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["principaux",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profils",{"_index":1031,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["project",{"_index":1152,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promesse",{"_index":465,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["promise((resolve",{"_index":755,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["properties",{"_index":135,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"properties.html":{}}}],["protection",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["protégée",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["protégées",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["provide",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"injectables/UserProfileService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{}}}],["présent",{"_index":544,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["public",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/LoginComponent.html":{}}}],["que",{"_index":80,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/UserProfileService.html":{}}}],["queryparams",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{}}}],["qui",{"_index":516,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["racine",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["radix",{"_index":691,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["rapport",{"_index":97,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["ravis",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{}}}],["real",{"_index":680,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["redirection",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rediriger",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reference",{"_index":1194,"title":{},"body":{"index.html":{}}}],["register",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/UserProfileService.html":{}}}],["register(email",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register(user",{"_index":1061,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["registered",{"_index":623,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["registeruser",{"_index":725,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["regroupe",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{}}}],["reject",{"_index":756,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["reject(this._handleerror(error",{"_index":761,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["related",{"_index":431,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["relatif",{"_index":816,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["reload",{"_index":1164,"title":{},"body":{"index.html":{}}}],["request",{"_index":565,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["request.body",{"_index":701,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.body.email",{"_index":646,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.body.password",{"_index":648,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.clone",{"_index":823,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["request.headers.get('authorization",{"_index":682,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.method",{"_index":641,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users",{"_index":674,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users/authenticate",{"_index":640,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users/register",{"_index":699,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.match(/\\/users\\/\\d",{"_index":687,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.split",{"_index":690,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["requis",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["requise",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["requête",{"_index":1056,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["requêtes",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{}}}],["resetform",{"_index":985,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["resetpassword",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(email",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resolve(true",{"_index":767,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["resolve(user",{"_index":760,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["respond",{"_index":714,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["responsable",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{}}}],["response",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["response.data",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["results",{"_index":68,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retour",{"_index":379,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["return",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":574,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["revoir",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"injectables/UserProfileService.html":{}}}],["root'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["routage",{"_index":46,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["route",{"_index":82,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["router",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["routermodule",{"_index":72,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["routermodule.forchild(routes",{"_index":100,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":63,"title":{"routes.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{},"routes.html":{}}}],["routeur",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module",{"_index":50,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":71,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.ts",{"_index":429,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["run",{"_index":1158,"title":{},"body":{"index.html":{}}}],["running",{"_index":1177,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":525,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":527,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["réactif",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["réactifs",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{}}}],["réagit",{"_index":831,"title":{},"body":{"components/LayoutComponent.html":{}}}],["réception",{"_index":864,"title":{},"body":{"components/LayoutComponent.html":{}}}],["récupère",{"_index":455,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"injectables/UserProfileService.html":{}}}],["récupération",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["régl",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["réinitialisation",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/PasswordresetComponent.html":{}}}],["réinitialiser",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["réponse",{"_index":1064,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["résolue",{"_index":466,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{}}}],["réussi",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["réussie",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{}}}],["réutilisables",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["s'enregistrer",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["s'occupe",{"_index":786,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["s\\'enregistrer",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["saisie",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["save",{"_index":708,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["scaffolding",{"_index":1168,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{}}}],["scrollpositionrestoration",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scss",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["se",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["security",{"_index":677,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["selector",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["selon",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["sert",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":1159,"title":{},"body":{"index.html":{}}}],["server",{"_index":637,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["service",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["services",{"_index":64,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["services/auth.service",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["services/authfake.service",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["ses",{"_index":999,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["sessionstorage",{"_index":737,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["sessionstorage.getitem('authuser",{"_index":770,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["sessionstorage.removeitem('authuser",{"_index":754,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["sessionstorage.setitem('authuser",{"_index":753,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["setheaders",{"_index":824,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setloggeedinuser",{"_index":726,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["shadowed",{"_index":694,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["shared/shared.module",{"_index":876,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["shared/ui/ui.module",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{}}}],["sharedmodule",{"_index":869,"title":{"modules/SharedModule.html":{}},"body":{"modules/LayoutsModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["si",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["side",{"_index":679,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["sidebar",{"_index":813,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["signup",{"_index":435,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["signup.component.html",{"_index":1015,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":1014,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":167,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":1016,"title":{},"body":{"components/SignupComponent.html":{}}}],["simulant",{"_index":505,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["simulate",{"_index":636,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["simulée",{"_index":514,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["sinon",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{}}}],["size",{"_index":1090,"title":{},"body":{"components/VerticalComponent.html":{}}}],["sogapaintcrm",{"_index":1151,"title":{},"body":{"index.html":{}}}],["sogapeint",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["son",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"components/VerticalComponent.html":{}}}],["soumission",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"modules/PagesModule.html":{},"components/PasswordresetComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"modules/UiModule.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"components/VerticalComponent.html":{},"index.html":{}}}],["sous",{"_index":78,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["souscription",{"_index":860,"title":{},"body":{"components/LayoutComponent.html":{}}}],["souvenir",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["spécifique",{"_index":47,"title":{},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"components/HorizontalComponent.html":{}}}],["spécifiques",{"_index":54,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/VerticalComponent.html":{}}}],["src/.../app.module.ts",{"_index":1148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authutils.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event.service.ts",{"_index":1206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../layouts.model.ts",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account/account",{"_index":70,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/account/account.module.ts",{"_index":20,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/app/account/auth/auth",{"_index":428,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/account/auth/auth.module.ts",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/account/auth/login/login.component.ts",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/account/auth/login/login.component.ts:28",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:29",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:30",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:31",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:34",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:40",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:41",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:44",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:56",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/login/login.component.ts:64",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts",{"_index":977,"title":{},"body":{"components/PasswordresetComponent.html":{},"coverage.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:24",{"_index":995,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:25",{"_index":996,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:26",{"_index":993,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:27",{"_index":997,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:28",{"_index":994,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:31",{"_index":988,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:40",{"_index":990,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:47",{"_index":989,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:52",{"_index":998,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/passwordreset/passwordreset.component.ts:61",{"_index":991,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts",{"_index":1010,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/account/auth/signup/signup.component.ts:27",{"_index":1027,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:28",{"_index":1028,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:29",{"_index":1026,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:30",{"_index":1029,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:33",{"_index":1020,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:43",{"_index":1022,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:52",{"_index":1021,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:57",{"_index":1030,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/account/auth/signup/signup.component.ts:66",{"_index":1023,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/app",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/authutils.ts",{"_index":719,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/authutils.ts:105",{"_index":735,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:11",{"_index":729,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:117",{"_index":744,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:36",{"_index":740,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:53",{"_index":738,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:69",{"_index":734,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:83",{"_index":739,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/authutils.ts:97",{"_index":741,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:31",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/error.interceptor.ts",{"_index":556,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/helpers/error.interceptor.ts:12",{"_index":564,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/helpers/error.interceptor.ts:9",{"_index":559,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/helpers/fake",{"_index":612,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["src/app/core/helpers/jwt.interceptor.ts",{"_index":819,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/core/helpers/jwt.interceptor.ts:11",{"_index":820,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/core/helpers/jwt.interceptor.ts:14",{"_index":821,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/core/models/auth.models.ts",{"_index":1040,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/models/auth.models.ts:2",{"_index":1043,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:3",{"_index":1047,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:4",{"_index":1045,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:5",{"_index":1042,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:6",{"_index":1044,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:7",{"_index":1046,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/auth.models.ts:8",{"_index":1041,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:20",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/auth.service.ts:30",{"_index":454,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/auth.service.ts:55",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/auth.service.ts:68",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/auth.service.ts:78",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authfake.service.ts",{"_index":502,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authfake.service.ts:18",{"_index":520,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["src/app/core/services/authfake.service.ts:19",{"_index":511,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["src/app/core/services/authfake.service.ts:32",{"_index":522,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["src/app/core/services/authfake.service.ts:43",{"_index":512,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["src/app/core/services/authfake.service.ts:59",{"_index":518,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["src/app/core/services/event.service.ts",{"_index":585,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/event.service.ts:17",{"_index":608,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/services/event.service.ts:25",{"_index":610,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/services/event.service.ts:34",{"_index":611,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1048,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:14",{"_index":1053,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/app/core/services/user.service.ts:27",{"_index":1054,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/app/core/services/user.service.ts:38",{"_index":1062,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/app/layouts/horizontal/horizontal.component.ts",{"_index":782,"title":{},"body":{"components/HorizontalComponent.html":{},"coverage.html":{}}}],["src/app/layouts/horizontal/horizontal.component.ts:14",{"_index":794,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["src/app/layouts/horizontal/horizontal.component.ts:24",{"_index":795,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["src/app/layouts/layout/layout.component.ts",{"_index":829,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/layout/layout.component.ts:22",{"_index":840,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layouts/layout/layout.component.ts:26",{"_index":845,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layouts/layout/layout.component.ts:41",{"_index":844,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layouts/layout/layout.component.ts:49",{"_index":841,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layouts/layout/layouts.model.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/layouts/layouts.module.ts",{"_index":870,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/layouts/shared/shared.module.ts",{"_index":1009,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/layouts/vertical/vertical.component.ts",{"_index":1067,"title":{},"body":{"components/VerticalComponent.html":{},"coverage.html":{}}}],["src/app/layouts/vertical/vertical.component.ts:14",{"_index":1074,"title":{},"body":{"components/VerticalComponent.html":{}}}],["src/app/layouts/vertical/vertical.component.ts:23",{"_index":1075,"title":{},"body":{"components/VerticalComponent.html":{}}}],["src/app/layouts/vertical/vertical.component.ts:37",{"_index":1083,"title":{},"body":{"components/VerticalComponent.html":{}}}],["src/app/layouts/vertical/vertical.component.ts:51",{"_index":1076,"title":{},"body":{"components/VerticalComponent.html":{}}}],["src/app/pages/pages.module.ts",{"_index":976,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/shared/ui/ui.module.ts",{"_index":1039,"title":{},"body":{"modules/UiModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1150,"title":{"index.html":{}},"body":{}}],["state",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":385,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":665,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["stockage",{"_index":541,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["stocke",{"_index":540,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["stocker",{"_index":742,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["stockées",{"_index":531,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["storage",{"_index":622,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["storagebucket",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1174,"title":{},"body":{"index.html":{}}}],["string",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["style",{"_index":802,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["styles",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["styleurls",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["subject",{"_index":587,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["submitted",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe",{"_index":596,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(callback",{"_index":607,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["subscribe(type",{"_index":600,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["subscription",{"_index":588,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["success",{"_index":986,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["successmsg",{"_index":1017,"title":{},"body":{"components/SignupComponent.html":{}}}],["succès",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/SignupComponent.html":{}}}],["suivre",{"_index":528,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["supplémentaires",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["support",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["supprime",{"_index":549,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["supprimer",{"_index":814,"title":{},"body":{"components/HorizontalComponent.html":{}}}],["supérieure",{"_index":804,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["sur",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthBackend.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["svg",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["system",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["sélecteur",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["table",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":1059,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":707,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["tat",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tats",{"_index":1000,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["telles",{"_index":79,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/UserProfileService.html":{}}}],["template",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["templateurl",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["test",{"_index":504,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"index.html":{}}}],["testing",{"_index":1187,"title":{},"body":{"index.html":{}}}],["tests",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["theme",{"_index":857,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.authenticationservice.currentuser",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["this.authenticationservice.login(this.f.email.value",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout",{"_index":576,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.authenticationservice.register(this.f.email.value",{"_index":1036,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authenticationservice.resetpassword(this.f.email.value",{"_index":1008,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["this.authfackservice.currentuservalue",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["this.authfackservice.login(this.f.email.value",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentuser",{"_index":535,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.currentusersubject",{"_index":533,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.currentusersubject.asobservable",{"_index":536,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.currentusersubject.next(null",{"_index":553,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.currentusersubject.next(user",{"_index":548,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.currentusersubject.value",{"_index":537,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.error",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["this.eventservice.subscribe('changelayout",{"_index":863,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.f.password.value",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.value).then((res",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formbuilder.group",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["this.handler.next",{"_index":595,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["this.handler.pipe",{"_index":601,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["this.http.get(`/api/login",{"_index":1065,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.http.post(`/users/authenticate",{"_index":538,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["this.http.post(`/users/register",{"_index":1066,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.layouttype",{"_index":859,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.loginform",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetform",{"_index":1001,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["this.resetform.controls",{"_index":1005,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["this.resetform.invalid",{"_index":1007,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["this.returnurl",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/account/login",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{}}}],["this.signupform",{"_index":1033,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":1034,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.invalid",{"_index":1035,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.submitted",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["this.success",{"_index":1006,"title":{},"body":{"components/PasswordresetComponent.html":{}}}],["this.successmsg",{"_index":1037,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.userservice.register(this.signupform.value",{"_index":1038,"title":{},"body":{"components/SignupComponent.html":{}}}],["throwerror",{"_index":568,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["throwerror(error",{"_index":581,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thème",{"_index":855,"title":{},"body":{"components/LayoutComponent.html":{}}}],["tierces",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["title",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["titre",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["token",{"_index":543,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/User.html":{}}}],["top",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["topbar",{"_index":807,"title":{},"body":{"components/HorizontalComponent.html":{},"components/VerticalComponent.html":{}}}],["tous",{"_index":1055,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["toutes",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{}}}],["traduction",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["traductions",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["traite",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["traiter",{"_index":746,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["translate",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["tre",{"_index":56,"title":{},"body":{"modules/AccountModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["tree",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["true",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":625,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["type",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type)).pipe",{"_index":604,"title":{},"body":{"interfaces/Event.html":{},"injectables/EventService.html":{}}}],["typealiases",{"_index":1204,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":849,"title":{},"body":{"components/LayoutComponent.html":{}}}],["uimodule",{"_index":391,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["un",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"miscellaneous/functions.html":{}}}],["unauthorised",{"_index":686,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["une",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/PasswordresetComponent.html":{},"injectables/UserProfileService.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":775,"title":{},"body":{"classes/FirebaseAuthBackend.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1178,"title":{},"body":{"index.html":{}}}],["untypedformbuilder",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["untypedformgroup",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["url",{"_index":764,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["urlparts",{"_index":689,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["use",{"_index":1170,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":448,"title":{"classes/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/FirebaseAuthBackend.html":{},"classes/User.html":{},"injectables/UserProfileService.html":{},"coverage.html":{}}}],["user.email",{"_index":645,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.firstname",{"_index":661,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.id",{"_index":658,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.lastname",{"_index":663,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.password",{"_index":647,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.token",{"_index":545,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["user.username",{"_index":659,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["username",{"_index":630,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["userprofileservice",{"_index":1019,"title":{"injectables/UserProfileService.html":{}},"body":{"components/SignupComponent.html":{},"injectables/UserProfileService.html":{},"coverage.html":{}}}],["users",{"_index":624,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users.filter(user",{"_index":644,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users.length",{"_index":710,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users.push(newuser",{"_index":711,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["userservice",{"_index":1018,"title":{},"body":{"components/SignupComponent.html":{}}}],["utile",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["utilis",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["utilisant",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["utilisateur",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["utilisateurs",{"_index":29,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"injectables/UserProfileService.html":{}}}],["utilisation",{"_index":101,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["utilise",{"_index":93,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["utiliser",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["utilisez",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{}}}],["utilisée",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordresetComponent.html":{},"miscellaneous/functions.html":{}}}],["utilisés",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LayoutsModule.html":{}}}],["utilitaire",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["valeur",{"_index":523,"title":{},"body":{"injectables/AuthfakeauthenticationService.html":{}}}],["valid",{"_index":651,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["validation",{"_index":702,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["validators",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["valide",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventService.html":{},"classes/FirebaseAuthBackend.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthBackend.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["variable",{"_index":695,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["variables",{"_index":925,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["vers",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/VerticalComponent.html":{}}}],["version",{"_index":1155,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"miscellaneous/variables.html":{}}}],["vertical.component.html",{"_index":1071,"title":{},"body":{"components/VerticalComponent.html":{}}}],["vertical.component.scss",{"_index":1070,"title":{},"body":{"components/VerticalComponent.html":{}}}],["vertical/vertical.component",{"_index":877,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["verticalcomponent",{"_index":169,"title":{"components/VerticalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verticale",{"_index":830,"title":{},"body":{"components/LayoutComponent.html":{},"modules/LayoutsModule.html":{},"components/VerticalComponent.html":{}}}],["via",{"_index":1013,"title":{},"body":{"components/SignupComponent.html":{},"index.html":{}}}],["void",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthfakeauthenticationService.html":{},"interfaces/Event.html":{},"injectables/EventService.html":{},"components/HorizontalComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["vous",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["vrai",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{},"components/LayoutComponent.html":{}}}],["vue",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["vues",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["vénements",{"_index":846,"title":{},"body":{"components/LayoutComponent.html":{}}}],["vérifie",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["window.location.host",{"_index":766,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["window.location.protocol",{"_index":765,"title":{},"body":{"classes/FirebaseAuthBackend.html":{}}}],["window.screen.width",{"_index":1097,"title":{},"body":{"components/VerticalComponent.html":{}}}],["works",{"_index":818,"title":{},"body":{"components/HorizontalComponent.html":{},"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{},"components/VerticalComponent.html":{}}}],["wrap",{"_index":634,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["y",{"_index":30,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"classes/FirebaseAuthBackend.html":{},"components/VerticalComponent.html":{}}}],["year",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordresetComponent.html":{},"components/SignupComponent.html":{}}}],["zone.js",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAccountModule -->\n\nAuthModule->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module Account.\nGère les fonctionnalités liées aux comptes utilisateurs, y compris l'authentification\net la navigation associée.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Importation du module de routage spécifique au module de compte\nimport { AccountRoutingModule } from './account-routing.module';\n// Importation du module d'authentification\nimport { AuthModule } from './auth/auth.module';\n\n/**\n * Module Account.\n *\n * Gère les fonctionnalités liées aux comptes utilisateurs, y compris l'authentification\n * et la navigation associée.\n */\n@NgModule({\n  declarations: [\n    // Les composants spécifiques au module Account peuvent être déclarés ici\n  ],\n  imports: [\n    CommonModule,  // Module commun pour les fonctionnalités de base d'Angular\n    AccountRoutingModule,  // Module de routage pour les routes de compte\n    AuthModule  // Module pour les fonctionnalités d'authentification\n  ]\n  // Les services spécifiques au module Account peuvent être fournis ici\n})\nexport class AccountModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/**\n * Configuration des routes pour le module de compte.\n *\n * Définit les sous-routes pour les fonctionnalités liées aux comptes utilisateurs, \n * telles que l'authentification.\n */\nconst routes: Routes = [\n  // Route pour les fonctionnalités d'authentification avec chargement paresseux du AuthModule\n  { path: 'auth', loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\" },\n];\n\n/**\n * Module de routage pour le module de compte.\n *\n * Importe et exporte RouterModule avec les routes spécifiques au module de compte.\n * Utilise 'forChild' pour les routes enfants par rapport au routage principal de l'application.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],  // Configuration des routes enfants pour le module de compte\n  exports: [RouterModule]  // Exporte RouterModule pour utilisation dans d'autres parties de l'application\n})\nexport class AccountRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant racine de l'application Angular.\nSert de point d'ancrage pour l'ensemble de l'application et définit la vue racine.\nCe composant englobe toutes les autres vues et composants de l'application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SOGAPEINT'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Composant racine de l'application Angular.\n *\n * Sert de point d'ancrage pour l'ensemble de l'application et définit la vue racine.\n * Ce composant englobe toutes les autres vues et composants de l'application.\n */\n@Component({\n  selector: 'app-root',  // Sélecteur CSS utilisé pour insérer ce composant dans le HTML\n  templateUrl: './app.component.html',  // Chemin vers le template HTML du composant\n  styleUrls: ['./app.component.scss']   // Chemin vers les styles SCSS du composant\n})\nexport class AppComponent {\n  title = 'SOGAPEINT';  // Titre de l'application, utilisé dans le template\n}\n\n    \n\n    \n        🫠 -->\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '🫠 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nAppModule -->\n\nLayoutsModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nFakeBackendInterceptor\n\nFakeBackendInterceptor\n\nAppModule -->\n\nFakeBackendInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module principal de l'application Angular.\nConfigure et déclare les principaux aspects de l'application, y compris les modules,\ncomposants, services, et intercepteurs.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            FakeBackendInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            LayoutsModule\n                        \n                        \n                            PagesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n// Importation des modules nécessaires pour la traduction internationale\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// Configuration de l'environnement\nimport { environment } from '../environments/environment';\n\n// Modules personnalisés pour la structure et les pages de l'application\nimport { LayoutsModule } from './layouts/layouts.module';\nimport { PagesModule } from './pages/pages.module';\n\n// Routing principal de l'application\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Outils d'authentification et intercepteurs HTTP\nimport { initFirebaseBackend } from './authUtils';\nimport { ErrorInterceptor } from './core/helpers/error.interceptor';\nimport { JwtInterceptor } from './core/helpers/jwt.interceptor';\nimport { FakeBackendInterceptor } from './core/helpers/fake-backend';\n\n// Initialisation du backend Firebase si configuré\nif (environment.defaultauth === 'firebase') {\n  initFirebaseBackend(environment.firebaseConfig);\n} else {\n  // Utilisation d'un backend fictif pour le développement ou les tests\n  FakeBackendInterceptor;\n}\n\n/**\n * Fonction de création pour le chargeur de traduction.\n *\n * Utilisée par ngx-translate pour charger les fichiers de traduction.\n * @param http HttpClient utilisé pour les requêtes de traduction.\n * @returns Un TranslateHttpLoader configuré.\n */\nexport function createTranslateLoader(http: HttpClient): any {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\n\n/**\n * Module principal de l'application Angular.\n *\n * Configure et déclare les principaux aspects de l'application, y compris les modules,\n * composants, services, et intercepteurs.\n */\n@NgModule({\n  declarations: [\n    AppComponent  // Déclaration du composant racine\n  ],\n  imports: [\n    BrowserModule,  // Fournit les services nécessaires pour lancer l'application dans un navigateur\n    HttpClientModule,  // Module pour les requêtes HTTP\n    AppRoutingModule,  // Configuration du routage principal\n    PagesModule,  // Module pour les pages de l'application\n    LayoutsModule,  // Module pour les dispositions/layout de l'application\n    FormsModule,  // Module pour les formulaires\n    TranslateModule.forRoot({  // Configuration de ngx-translate pour le chargement des traductions\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  providers: [\n    // Enregistrement des intercepteurs HTTP pour JWT, erreurs, et backend fictif\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: FakeBackendInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]  // Composant racine à charger au démarrage de l'application\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\n\n// Importation du composant LayoutComponent pour la structure de base de l'application\nimport { LayoutComponent } from './layouts/layout/layout.component';\n\n/**\n * Configuration des routes de l'application.\n *\n * Définit les routes et leurs chargements paresseux (lazy loading), ainsi que la protection\n * des routes par des gardes d'authentification.\n */\nconst routes: Routes = [\n  // Route pour les fonctionnalités liées au compte utilisateur\n  { path: 'account', loadChildren: () => \"import('./account/account.module').then(m => m.AccountModule)\" },\n\n  // Route principale, utilisant LayoutComponent et chargement paresseux du module des pages\n  // Protégée par AuthGuard pour assurer que l'utilisateur est authentifié\n  { path: '', component: LayoutComponent, loadChildren: () => \"import('./pages/pages.module').then(m => m.PagesModule)\", canActivate: [AuthGuard] },\n\n  // Route pour les pages supplémentaires, également protégées par AuthGuard\n//   { path: 'pages', loadChildren: () => import('./extrapages/extrapages.module').then(m => m.ExtrapagesModule), canActivate: [AuthGuard] },\n];\n\n/**\n * Module de routage de l'application.\n *\n * Importe et exporte RouterModule configuré avec les routes définies.\n * 'scrollPositionRestoration' est réglé sur 'top' pour réinitialiser la position de défilement\n * lors de la navigation entre les pages.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'top' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Garde d'authentification (AuthGuard).\nDétermine si un utilisateur peut naviguer vers une route donnée en fonction de son état d'authentification.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, authFackservice: AuthfakeauthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authFackservice\n                                                  \n                                                        \n                                                                        AuthfakeauthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        Méthode pour déterminer si une route peut être activée.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Informations sur la route activée.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    État du routeur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Vrai si l'utilisateur est authentifié, faux sinon.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n// Importation des services d'authentification\nimport { AuthenticationService } from '../services/auth.service';\nimport { AuthfakeauthenticationService } from '../services/authfake.service';\n\n// Importation des configurations d'environnement\nimport { environment } from '../../../environments/environment';\n\n/**\n * Garde d'authentification (AuthGuard).\n *\n * Détermine si un utilisateur peut naviguer vers une route donnée en fonction de son état d'authentification.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private authFackservice: AuthfakeauthenticationService\n    ) { }\n\n    /**\n     * Méthode pour déterminer si une route peut être activée.\n     *\n     * @param route Informations sur la route activée.\n     * @param state État du routeur.\n     * @returns Vrai si l'utilisateur est authentifié, faux sinon.\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        // Vérifie l'état d'authentification selon le mode d'authentification configuré\n        if (environment.defaultauth === 'firebase') {\n            const currentUser = this.authenticationService.currentUser();\n            if (currentUser) {\n                // Utilisateur authentifié, autorisation accordée pour accéder à la route\n                return true;\n            }\n        } else {\n            const currentUser = this.authFackservice.currentUserValue;\n            if (currentUser) {\n                // Utilisateur authentifié avec le service d'authentification fictive\n                return true;\n            }\n        }\n        // Si l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\n        // et conserver l'URL de retour pour une redirection après l'authentification\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordresetComponent\n\nPasswordresetComponent\n\nAuthModule -->\n\nPasswordresetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module d'authentification.\nResponsable de fournir toutes les fonctionnalités liées à l'authentification\nde l'utilisateur, y compris la connexion, l'inscription et la réinitialisation\ndu mot de passe. Ce module regroupe les composants, les services et les routes\nnécessaires pour l'authentification.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordresetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Importation de NgbAlertModule pour l'utilisation des alertes Bootstrap\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\n// Importation de UiModule pour les éléments d'interface utilisateur partagés\nimport { UiModule } from '../../shared/ui/ui.module';\n\n// Importation du module de routage spécifique à l'authentification\nimport { AuthRoutingModule } from './auth-routing';\n\n// Importation des composants liés à l'authentification\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n/**\n * Module d'authentification.\n *\n * Responsable de fournir toutes les fonctionnalités liées à l'authentification\n * de l'utilisateur, y compris la connexion, l'inscription et la réinitialisation\n * du mot de passe. Ce module regroupe les composants, les services et les routes\n * nécessaires pour l'authentification.\n */\n@NgModule({\n  // Déclaration des composants utilisés dans ce module\n  declarations: [LoginComponent, SignupComponent, PasswordresetComponent],\n  imports: [\n    // CommonModule est nécessaire pour les fonctionnalités de base d'Angular\n    CommonModule,\n\n    // ReactiveFormsModule pour la gestion des formulaires réactifs\n    ReactiveFormsModule,\n\n    // NgbAlertModule pour utiliser les alertes Bootstrap\n    NgbAlertModule,\n\n    // UiModule pour les éléments d'interface utilisateur réutilisables\n    UiModule,\n\n    // AuthRoutingModule pour la gestion des routes liées à l'authentification\n    AuthRoutingModule\n  ],\n\n  // CUSTOM_ELEMENTS_SCHEMA permet l'utilisation de balises personnalisées\n  // et est nécessaire si vous utilisez des composants personnalisés ou de tierces parties\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/auth/auth-routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Importation des composants utilisés dans les routes d'authentification\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n/**\n * Routes for authentication-related actions.\n *\n * Définit les routes pour les actions liées à l'authentification, telles que\n * la connexion, l'inscription et la réinitialisation du mot de passe.\n */\nconst routes: Routes = [\n    {\n        // Route pour la page de connexion\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        // Route pour la page d'inscription\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        // Route pour la page de réinitialisation du mot de passe\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n];\n\n/**\n * Module de routage pour les fonctionnalités d'authentification.\n *\n * Importe et exporte les fonctionnalités de routage de RouterModule pour gérer\n * les routes spécifiques à l'authentification, telles que la connexion, l'inscription\n * et la réinitialisation du mot de passe. Ce module est utilisé pour isoler\n * les routes d'authentification du routage principal de l'application.\n */\n@NgModule({\n    // Importation des routes définies ci-dessus\n    imports: [RouterModule.forChild(routes)],\n    // Exportation du RouterModule pour une utilisation dans d'autres parties de l'application\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service d'authentification.\nFournit des fonctionnalités d'authentification, y compris la connexion,\nl'inscription, la réinitialisation du mot de passe et la déconnexion.\nInteragit avec le backend Firebase pour ces opérations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Récupère l'utilisateur actuellement authentifié.\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                L'utilisateur authentifié ou null si aucun utilisateur n'est connecté.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Connecte un utilisateur avec un email et un mot de passe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'email de l'utilisateur.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le mot de passe de l'utilisateur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Une promesse résolue avec les détails de l'utilisateur après une connexion réussie.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Déconnecte l'utilisateur actuellement connecté.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Enregistre un nouvel utilisateur avec un email et un mot de passe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'email de l'utilisateur.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le mot de passe de l'utilisateur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Une promesse résolue avec les détails de l'utilisateur après un enregistrement réussi.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Envoie une demande de réinitialisation de mot de passe pour l'email donné.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'email pour lequel réinitialiser le mot de passe.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Une promesse résolue avec un message de succès.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// Utilitaire pour l'intégration avec le backend Firebase\nimport { getFirebaseBackend } from '../../authUtils'; // TODO : Changer pour adapter à la bdd\n\n// Modèle utilisateur pour la gestion de l'authentification\nimport { User } from '../models/auth.models';\n\n/**\n * Service d'authentification.\n *\n * Fournit des fonctionnalités d'authentification, y compris la connexion,\n * l'inscription, la réinitialisation du mot de passe et la déconnexion.\n * Interagit avec le backend Firebase pour ces opérations.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n    // L'utilisateur actuellement authentifié\n    user: User;\n\n    constructor() {\n    }\n\n    /**\n     * Récupère l'utilisateur actuellement authentifié.\n     *\n     * @returns L'utilisateur authentifié ou null si aucun utilisateur n'est connecté.\n     */\n    public currentUser(): User {\n        return getFirebaseBackend().getAuthenticatedUser(); // TODO : Changer pour adapter à la bdd\n    }\n\n    /**\n     * Connecte un utilisateur avec un email et un mot de passe.\n     *\n     * @param email L'email de l'utilisateur.\n     * @param password Le mot de passe de l'utilisateur.\n     * @returns Une promesse résolue avec les détails de l'utilisateur après une connexion réussie.\n     */\n    login(email: string, password: string) {\n        return getFirebaseBackend().loginUser(email, password).then((response: any) => { // TODO : Changer pour adapter à la bdd\n            const user = response;\n            return user;\n        });\n    }\n\n    /**\n     * Enregistre un nouvel utilisateur avec un email et un mot de passe.\n     *\n     * @param email L'email de l'utilisateur.\n     * @param password Le mot de passe de l'utilisateur.\n     * @returns Une promesse résolue avec les détails de l'utilisateur après un enregistrement réussi.\n     */\n    register(email: string, password: string) {\n        return getFirebaseBackend().registerUser(email, password).then((response: any) => { // TODO : Changer pour adapter à la bdd\n            const user = response;\n            return user;\n        });\n    }\n\n    /**\n     * Envoie une demande de réinitialisation de mot de passe pour l'email donné.\n     *\n     * @param email L'email pour lequel réinitialiser le mot de passe.\n     * @returns Une promesse résolue avec un message de succès.\n     */\n    resetPassword(email: string) {\n        return getFirebaseBackend().forgetPassword(email).then((response: any) => { // TODO : Changer pour adapter à la bdd\n            const message = response.data;\n            return message;\n        });\n    }\n\n    /**\n     * Déconnecte l'utilisateur actuellement connecté.\n     */\n    logout() {\n        getFirebaseBackend().logout(); // TODO : Changer pour adapter à la bdd\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthfakeauthenticationService.html":{"url":"injectables/AuthfakeauthenticationService.html","title":"injectable - AuthfakeauthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthfakeauthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authfake.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service d'authentification fictive.\nFournit des fonctionnalités d'authentification de base à des fins de test ou de développement,\nsimulant des interactions avec un backend d'authentification.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authfake.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authfake.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Effectue une connexion simulée avec un email et un mot de passe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'email de l'utilisateur.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le mot de passe de l'utilisateur.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Une Observable qui émet les détails de l'utilisateur après une connexion réussie.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authfake.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Déconnecte l'utilisateur actuellement connecté.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authfake.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authfake.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/authfake.service.ts:32\n                                \n                            \n                    \n                        \n                                Récupère la valeur actuelle de l'utilisateur connecté.\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Modèle utilisateur pour la gestion de l'authentification\nimport { User } from '../models/auth.models';\n\n/**\n * Service d'authentification fictive.\n *\n * Fournit des fonctionnalités d'authentification de base à des fins de test ou de développement,\n * simulant des interactions avec un backend d'authentification.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthfakeauthenticationService {\n    // Observable pour suivre l'utilisateur actuellement connecté\n    private currentUserSubject: BehaviorSubject;\n    public currentUser: Observable;\n\n    constructor(private http: HttpClient) {\n        // Initialisation de currentUserSubject avec les données de l'utilisateur stockées localement\n        this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    /**\n     * Récupère la valeur actuelle de l'utilisateur connecté.\n     *\n     * @returns L'utilisateur actuellement authentifié.\n     */\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    /**\n     * Effectue une connexion simulée avec un email et un mot de passe.\n     *\n     * @param email L'email de l'utilisateur.\n     * @param password Le mot de passe de l'utilisateur.\n     * @returns Une Observable qui émet les détails de l'utilisateur après une connexion réussie.\n     */\n    login(email: string, password: string) {\n        return this.http.post(`/users/authenticate`, { email, password })\n            .pipe(map(user => {\n\n                // Stocke les détails de l'utilisateur dans le stockage local si le token est présent\n                if (user && user.token) {\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    /**\n     * Déconnecte l'utilisateur actuellement connecté.\n     */\n    logout() {\n        // Supprime les données de l'utilisateur du stockage local et met à jour l'Observable\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/helpers/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/helpers/error.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/helpers/error.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/event.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\ninterface Event {\n  type: string;\n  payload?: any;\n}\n\ntype EventCallback = (payload: any) => void;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private handler = new Subject();\n    constructor() { }\n\n    /**\n     * Broadcast the event\n     * @param type type of event\n     * @param payload payload\n     */\n    broadcast(type: string, payload = {}) {\n        this.handler.next({ type, payload });\n    }\n\n    /**\n     * Subscribe to event\n     * @param type type of event\n     * @param callback call back function\n     */\n    subscribe(type: string, callback: EventCallback): Subscription {\n        return this.handler.pipe(\n            filter(event => event.type === type)).pipe(\n                map(event => event.payload))\n            .subscribe(callback);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                broadcast\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/event.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcast\n                        \n                    \n                \n            \n            \n                \nbroadcast(type: string, payload: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/event.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Broadcast the event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    type of event\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(type: string, callback: EventCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/event.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Subscribe to event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    type of event\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            EventCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    call back function\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/event.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\ninterface Event {\n  type: string;\n  payload?: any;\n}\n\ntype EventCallback = (payload: any) => void;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private handler = new Subject();\n    constructor() { }\n\n    /**\n     * Broadcast the event\n     * @param type type of event\n     * @param payload payload\n     */\n    broadcast(type: string, payload = {}) {\n        this.handler.next({ type, payload });\n    }\n\n    /**\n     * Subscribe to event\n     * @param type type of event\n     * @param callback call back function\n     */\n    subscribe(type: string, callback: EventCallback): Subscription {\n        return this.handler.pipe(\n            filter(event => event.type === type)).pipe(\n                map(event => event.payload))\n            .subscribe(callback);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/FakeBackendInterceptor.html":{"url":"interceptors/FakeBackendInterceptor.html","title":"interceptor - FakeBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  FakeBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/helpers/fake-backend.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/helpers/fake-backend.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/helpers/fake-backend.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // array in local storage for registered users\n        // tslint:disable-next-line: max-line-length\n        const users: any[] = JSON.parse(localStorage.getItem('users')) || [{ username: 'admin', email: 'admin@sogapeint.corp', password: '123456' }];\n\n        // wrap in delayed observable to simulate server api call\n        return of(null).pipe(mergeMap(() => {\n\n            // authenticate\n            if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n                const filteredUsers = users.filter(user => {\n                    return user.email === request.body.email && user.password === request.body.password;\n                });\n                if (filteredUsers.length) {\n                    // if login details are valid return 200 OK with user details and fake jwt token\n                    const user = filteredUsers[0];\n                    const body = {\n                        id: user.id,\n                        email: user.email,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    };\n\n                    return of(new HttpResponse({ status: 200, body }));\n                } else {\n                    // else return 400 bad request\n                    return throwError({ error: { message: 'Le mot de passe ou l\\'adresse e-mail est incorecte... VOUS NE PASSEREZ PAS !' } });\n                }\n            }\n\n            // get users\n            if (request.url.endsWith('/users') && request.method === 'GET') {\n                // tslint:disable-next-line: max-line-length\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    return of(new HttpResponse({ status: 200, body: users }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // get user by id\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'GET') {\n                // tslint:disable-next-line: max-line-length\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    const urlParts = request.url.split('/');\n                    // tslint:disable-next-line: radix\n                    const id = parseInt(urlParts[urlParts.length - 1]);\n                    // tslint:disable-next-line: no-shadowed-variable\n                    const matchedUsers = users.filter(user => user.id === id);\n                    const user = matchedUsers.length ? matchedUsers[0] : null;\n\n                    return of(new HttpResponse({ status: 200, body: user }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // register user\n            if (request.url.endsWith('/users/register') && request.method === 'POST') {\n                // get new user object from post body\n                const newUser = request.body;\n\n                // validation\n                const duplicateUser = users.filter(user => user.username === newUser.username).length;\n                if (duplicateUser) {\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\n                }\n\n                // save new user\n                newUser.id = users.length + 1;\n                users.push(newUser);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                // respond 200 OK\n                return of(new HttpResponse({ status: 200 }));\n            }\n\n            // delete user\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\n                // tslint:disable-next-line: max-line-length\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    const urlParts = request.url.split('/');\n                    // tslint:disable-next-line: radix\n                    const id = parseInt(urlParts[urlParts.length - 1]);\n                    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthBackend.html":{"url":"classes/FirebaseAuthBackend.html","title":"class - FirebaseAuthBackend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthBackend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authUtils.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe FirebaseAuthBackend.\nGère les fonctionnalités d'authentification avec Firebase, y compris l'enregistrement,\nla connexion, la réinitialisation du mot de passe et la déconnexion.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forgetPassword\n                            \n                            \n                                getAuthenticatedUser\n                            \n                            \n                                loginUser\n                            \n                            \n                                logout\n                            \n                            \n                                registerUser\n                            \n                            \n                                setLoggeedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/authUtils.ts:11\n                            \n                        \n\n                \n                    \n                            Constructeur de FirebaseAuthBackend.\nInitialise Firebase avec la configuration fournie.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Configuration Firebase.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forgetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:69\n                        \n                    \n\n            \n                \n                    Envoie un email de réinitialisation de mot de passe.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    email\n                                                    \n                                                            Email pour lequel réinitialiser le mot de passe.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:105\n                        \n                    \n\n            \n                \n                    Récupère l'utilisateur authentifié depuis le sessionStorage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:53\n                        \n                    \n\n            \n                \n                    Connecte un utilisateur avec email et mot de passe.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    email\n                                                    \n                                                            Email de l'utilisateur.\n\n                                                    \n                                            \n                                            \n                                                    password\n                                                    \n                                                            Mot de passe de l'utilisateur.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:83\n                        \n                    \n\n            \n                \n                    Déconnecte l'utilisateur actuellement connecté.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:36\n                        \n                    \n\n            \n                \n                    Enregistre un nouvel utilisateur avec email et mot de passe.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    email\n                                                    \n                                                            Email de l'utilisateur.\n\n                                                    \n                                            \n                                            \n                                                    password\n                                                    \n                                                            Mot de passe de l'utilisateur.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoggeedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/authUtils.ts:97\n                        \n                    \n\n            \n                \n                    Définit l'utilisateur connecté dans le sessionStorage.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                                    \n                                                            Utilisateur à stocker dans le sessionStorage.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _handleError\n                        \n                    \n                \n            \n            \n                \n_handleError(error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authUtils.ts:117\n                        \n                    \n\n\n            \n                \n                        Gère les erreurs Firebase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Erreur Firebase à traiter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Le message d'erreur.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n/**\n * Classe FirebaseAuthBackend.\n *\n * Gère les fonctionnalités d'authentification avec Firebase, y compris l'enregistrement,\n * la connexion, la réinitialisation du mot de passe et la déconnexion.\n */\nclass FirebaseAuthBackend {\n    /**\n     * Constructeur de FirebaseAuthBackend.\n     * Initialise Firebase avec la configuration fournie.\n     * @param firebaseConfig Configuration Firebase.\n     */\n    constructor(firebaseConfig) {\n        if (firebaseConfig) {\n            firebase.initializeApp(firebaseConfig);\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    sessionStorage.setItem('authUser', JSON.stringify(user));\n                } else {\n                    sessionStorage.removeItem('authUser');\n                }\n            });\n        }\n    }\n\n    /**\n     * Enregistre un nouvel utilisateur avec email et mot de passe.\n     * @param email Email de l'utilisateur.\n     * @param password Mot de passe de l'utilisateur.\n     * @returns Une promesse résolue avec les détails de l'utilisateur.\n     */\n    registerUser = (email, password) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().createUserWithEmailAndPassword(email, password).then((user: any) => {\n                var user: any = firebase.auth().currentUser;\n                resolve(user);\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * Connecte un utilisateur avec email et mot de passe.\n     * @param email Email de l'utilisateur.\n     * @param password Mot de passe de l'utilisateur.\n     * @returns Une promesse résolue avec les détails de l'utilisateur.\n     */\n    loginUser = (email, password) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signInWithEmailAndPassword(email, password).then((user: any) => {\n                var user: any = firebase.auth().currentUser;\n                resolve(user);\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * Envoie un email de réinitialisation de mot de passe.\n     * @param email Email pour lequel réinitialiser le mot de passe.\n     * @returns Une promesse résolue sur succès.\n     */\n    forgetPassword = (email) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().sendPasswordResetEmail(email, { url: window.location.protocol + '//' + window.location.host + '/login' }).then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * Déconnecte l'utilisateur actuellement connecté.\n     * @returns Une promesse résolue sur succès.\n     */\n    logout = () => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signOut().then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * Définit l'utilisateur connecté dans le sessionStorage.\n     * @param user Utilisateur à stocker dans le sessionStorage.\n     */\n    setLoggeedInUser = (user) => {\n        sessionStorage.setItem('authUser', JSON.stringify(user));\n    }\n\n    /**\n     * Récupère l'utilisateur authentifié depuis le sessionStorage.\n     * @returns L'utilisateur authentifié ou null si aucun utilisateur n'est connecté.\n     */\n    getAuthenticatedUser = () => {\n        if (!sessionStorage.getItem('authUser')) {\n            return null;\n        }\n        return JSON.parse(sessionStorage.getItem('authUser'));\n    }\n\n    /**\n     * Gère les erreurs Firebase.\n     * @param error Erreur Firebase à traiter.\n     * @returns Le message d'erreur.\n     */\n    _handleError(error) {\n        var errorMessage = error.message;\n        return errorMessage;\n    }\n}\n\n// Instance unique de FirebaseAuthBackend\nlet _fireBaseBackend = null;\n\n/**\n * Initialise FirebaseAuthBackend avec la configuration donnée.\n * Assure une instance unique de FirebaseAuthBackend.\n * @param config Configuration Firebase.\n * @returns L'instance de FirebaseAuthBackend.\n */\nconst initFirebaseBackend = (config) => {\n    if (!_fireBaseBackend) {\n        _fireBaseBackend = new FirebaseAuthBackend(config);\n    }\n    return _fireBaseBackend;\n};\n\n/**\n * Obtient l'instance actuelle de FirebaseAuthBackend.\n * @returns L'instance de FirebaseAuthBackend.\n */\nconst getFirebaseBackend = () => {\n    return _fireBaseBackend;\n};\n\nexport { initFirebaseBackend, getFirebaseBackend };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HorizontalComponent.html":{"url":"components/HorizontalComponent.html","title":"component - HorizontalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HorizontalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/horizontal/horizontal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Horizontal.\nGère la mise en page horizontale de l'application. Ce composant s'occupe de la configuration\nspécifique nécessaire pour afficher l'interface utilisateur dans une disposition horizontale.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-horizontal\n            \n\n\n\n            \n                styleUrls\n                ./horizontal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./horizontal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/horizontal/horizontal.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/horizontal/horizontal.component.ts:24\n                        \n                    \n\n\n            \n                \n                        Actions à effectuer à l'initialisation du composant.\nConfigure les attributs du corps du document pour la mise en page horizontale,\ndéfinissant le style de la barre supérieure et la disposition globale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Composant Horizontal.\n *\n * Gère la mise en page horizontale de l'application. Ce composant s'occupe de la configuration\n * spécifique nécessaire pour afficher l'interface utilisateur dans une disposition horizontale.\n */\n@Component({\n  selector: 'app-horizontal',  // Sélecteur CSS pour l'utilisation du composant dans le HTML\n  templateUrl: './horizontal.component.html',  // Chemin vers le template HTML du composant\n  styleUrls: ['./horizontal.component.scss']   // Chemin vers les styles SCSS du composant\n})\nexport class HorizontalComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n   * Actions à effectuer à l'initialisation du composant.\n   *\n   * Configure les attributs du corps du document pour la mise en page horizontale,\n   * définissant le style de la barre supérieure et la disposition globale.\n   */\n  ngOnInit(): void {\n    document.body.setAttribute('data-topbar', 'dark');  // Configurer le style de la barre supérieure\n    document.body.setAttribute('data-layout', 'horizontal');  // Définir la disposition horizontale\n    document.body.removeAttribute('data-sidebar');  // Supprimer l'attribut relatif à la barre latérale\n  }\n}\n\n    \n\n    \n        horizontal works!\n\n    \n\n    \n                \n                    ./horizontal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'horizontal works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HorizontalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/helpers/jwt.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, authfackservice: AuthfakeauthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/helpers/jwt.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authfackservice\n                                                  \n                                                        \n                                                                        AuthfakeauthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/helpers/jwt.interceptor.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../services/auth.service';\nimport { AuthfakeauthenticationService } from '../services/authfake.service';\n\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService, private authfackservice: AuthfakeauthenticationService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        if (environment.defaultauth === 'firebase') {\n            const currentUser = this.authenticationService.currentUser();\n            if (currentUser && currentUser.token) {\n                request = request.clone({\n                    setHeaders: {\n                        Authorization: `Bearer ${currentUser.token}`\n                    }\n                });\n            }\n        } else {\n            // add authorization header with jwt token if available\n            const currentUser = this.authfackservice.currentUserValue;\n            if (currentUser && currentUser.token) {\n                request = request.clone({\n                    setHeaders: {\n                        Authorization: `Bearer ${currentUser.token}`\n                    }\n                });\n            }\n        }\n        return next.handle(request);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/layout/layout.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Layout.\nGère la disposition globale de l'application (verticale ou horizontale)\net réagit aux changements de disposition demandés.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n\n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                layoutType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isHorizontalLayoutRequested\n                            \n                            \n                                isVerticalLayoutRequested\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/layout/layout.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isHorizontalLayoutRequested\n                        \n                    \n                \n            \n            \n                \nisHorizontalLayoutRequested()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/layout/layout.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Détermine si une disposition horizontale est demandée.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Vrai si le layout horizontal est actif.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVerticalLayoutRequested\n                        \n                    \n                \n            \n            \n                \nisVerticalLayoutRequested()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/layout/layout.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Détermine si une disposition verticale est demandée.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Vrai si le layout vertical est actif.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/layout/layout.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        layoutType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/layout/layout.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// Importation du service EventService pour la gestion des événements\nimport { EventService } from '../../core/services/event.service';\n\n// Importation des constantes pour les types de layout\nimport { LAYOUT_VERTICAL, LAYOUT_HORIZONTAL } from './layouts.model';\n\n/**\n * Composant Layout.\n *\n * Gère la disposition globale de l'application (verticale ou horizontale)\n * et réagit aux changements de disposition demandés.\n */\n@Component({\n  selector: 'app-layout',  // Sélecteur CSS pour l'utilisation du composant\n  templateUrl: './layout.component.html',  // Chemin vers le template HTML du composant\n  styleUrls: ['./layout.component.scss']   // Chemin vers les styles SCSS du composant\n})\nexport class LayoutComponent implements OnInit {\n\n  layoutType: string;  // Variable pour stocker le type de layout actuel\n\n  constructor(private eventService: EventService) { }\n\n  ngOnInit() {\n    // Configuration initiale de l'attribut de thème et du type de layout\n    document.body.setAttribute('data-bs-theme', 'light');\n    this.layoutType = LAYOUT_VERTICAL;\n\n    // Souscription à l'événement de changement de layout\n    this.eventService.subscribe('changeLayout', (layout) => {\n      this.layoutType = layout;  // Mise à jour du type de layout sur réception de l'événement\n    });\n  }\n\n  /**\n   * Détermine si une disposition verticale est demandée.\n   * @returns Vrai si le layout vertical est actif.\n   */\n  isVerticalLayoutRequested() {\n    return this.layoutType === LAYOUT_VERTICAL;\n  }\n\n  /**\n   * Détermine si une disposition horizontale est demandée.\n   * @returns Vrai si le layout horizontal est actif.\n   */\n  isHorizontalLayoutRequested() {\n    return this.layoutType === LAYOUT_HORIZONTAL;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutsModule.html":{"url":"modules/LayoutsModule.html","title":"module - LayoutsModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\ncluster_LayoutsModule_declarations\n\n\n\n\nHorizontalComponent\n\nHorizontalComponent\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nHorizontalComponent->LayoutsModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutsModule -->\n\nLayoutComponent->LayoutsModule\n\n\n\n\n\nVerticalComponent\n\nVerticalComponent\n\nLayoutsModule -->\n\nVerticalComponent->LayoutsModule\n\n\n\n\n\nHorizontalComponent \n\nHorizontalComponent \n\nHorizontalComponent  -->\n\nLayoutsModule->HorizontalComponent \n\n\n\n\n\nVerticalComponent \n\nVerticalComponent \n\nVerticalComponent  -->\n\nLayoutsModule->VerticalComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLayoutsModule -->\n\nSharedModule->LayoutsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/layouts.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module pour la gestion des layouts dans l'application.\nDéclare et fournit les composants utilisés pour les différentes dispositions\nde l'application (verticale, horizontale, etc.).\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HorizontalComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            VerticalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HorizontalComponent\n                        \n                        \n                            VerticalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n// Importation du module partagé pour les composants réutilisables\nimport { SharedModule } from './shared/shared.module';\n\n// Importation des composants de mise en page\nimport { VerticalComponent } from './vertical/vertical.component';\nimport { HorizontalComponent } from './horizontal/horizontal.component';\nimport { LayoutComponent } from './layout/layout.component';\n\n/**\n * Module pour la gestion des layouts dans l'application.\n *\n * Déclare et fournit les composants utilisés pour les différentes dispositions\n * de l'application (verticale, horizontale, etc.).\n */\n@NgModule({\n  declarations: [\n    VerticalComponent,  // Composant pour la disposition verticale\n    HorizontalComponent,  // Composant pour la disposition horizontale\n    LayoutComponent  // Composant principal de mise en page\n  ],\n  imports: [\n    CommonModule,  // Module commun pour les directives Angular de base\n    SharedModule,  // Module partagé pour les composants réutilisables\n    RouterModule  // Module pour la gestion des routes dans l'application\n  ],\n  exports: [\n    VerticalComponent,  // Exporte le composant vertical pour une utilisation en dehors de ce module\n    HorizontalComponent  // Exporte le composant horizontal pour une utilisation en dehors de ce module\n  ]\n})\nexport class LayoutsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Login.\nGère la logique de la page de connexion, permettant aux utilisateurs de se connecter\navec leurs identifiants. Il utilise un formulaire réactif pour la saisie des données\net peut gérer l'authentification à l'aide de différents services selon l'environnement.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Public\n                                authFackservice\n                            \n                            \n                                error\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: UntypedFormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, authFackservice: AuthfakeauthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/auth/login/login.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authFackservice\n                                                  \n                                                        \n                                                                        AuthfakeauthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/login/login.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/login/login.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Gère la soumission du formulaire de connexion.\nValide le formulaire et utilise le service d'authentification approprié\npour connecter l'utilisateur. Gère également les erreurs d'authentification.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authFackservice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthfakeauthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/account/auth/login/login.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\n\n// Services d'authentification\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n/**\n * Composant Login.\n *\n * Gère la logique de la page de connexion, permettant aux utilisateurs de se connecter\n * avec leurs identifiants. Il utilise un formulaire réactif pour la saisie des données\n * et peut gérer l'authentification à l'aide de différents services selon l'environnement.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  // Déclaration des variables pour le formulaire, la soumission et les erreurs\n  loginForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n\n  // Variable pour stocker l'année actuelle, utile pour l'affichage dans le template\n  year: number = new Date().getFullYear();\n\n  constructor(\n    private formBuilder: UntypedFormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    public authenticationService: AuthenticationService, \n    public authFackservice: AuthfakeauthenticationService\n  ) { }\n\n  ngOnInit() {\n    // Configuration initiale du formulaire de connexion\n    this.loginForm = this.formBuilder.group({\n      email: ['admin@sogapeint.corp', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n\n    // Récupération du retour d'URL depuis les paramètres de la route, si disponible\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // Accesseur pour les contrôles du formulaire\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Gère la soumission du formulaire de connexion.\n   *\n   * Valide le formulaire et utilise le service d'authentification approprié\n   * pour connecter l'utilisateur. Gère également les erreurs d'authentification.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // Vérifie si le formulaire est invalide et arrête l'exécution si c'est le cas\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      // Traite la connexion en fonction de l'environnement d'authentification\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.router.navigate(['/']);\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.router.navigate(['/']);\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        login works! -->\n\n    \n  \n   \n    \n      \n        \n          \n            \n              \n                \n                  \n                    \n                      \n                        \n                           -->\n                          \n                        \n                      \n  \n                      Ravis de vous revoir !\n                      Connectez-vous pour accéder à SOGAPEINT\n                    \n  \n                    \n                      \n                        {{ error }}\n                        \n                          \n                          Email\n                          \n                          \n                            L'adresse e-mail est requise\n                            L'adresse e-mail doit être valide\n                          \n                        \n  \n                        \n                          \n                          Password\n                          \n                          \n                            Le mot de passe est requis\n                          \n                        \n  \n                        \n                          \n                          Se souvenir de moi\n                        \n  \n                        \n                          Connexion\n                        \n  \n                        \n                          \n                            Mot de passe\n                            oublié ?\n                        \n                      \n                    \n  \n                    \n                      Vous n'avez pas de compte ? \n                          S'enregistrer  \n                      © 2023 Digital Info System\n                    \n                  \n  \n                \n              \n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n   \n  \n  \n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'login works! -->                                                                                                                                                                                              -->                                                                                                Ravis de vous revoir !                      Connectez-vous pour accéder à SOGAPEINT                                                                                        {{ error }}                                                                            Email                                                                                L\\'adresse e-mail est requise                            L\\'adresse e-mail doit être valide                                                                                                                                Password                                                                                Le mot de passe est requis                                                                                                                                Se souvenir de moi                                                                            Connexion                                                                                                        Mot de passe                            oublié ?                                                                                                              Vous n\\'avez pas de compte ?                           S\\'enregistrer                        © 2023 Digital Info System                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordresetComponent.html":{"url":"components/PasswordresetComponent.html","title":"component - PasswordresetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordresetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/auth/passwordreset/passwordreset.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Passwordreset.\nPermet aux utilisateurs de demander une réinitialisation de leur mot de passe.\nUtilise un formulaire réactif pour la saisie de l'email et communique avec le\nservice d'authentification pour effectuer la réinitialisation.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-passwordreset\n            \n\n\n\n            \n                styleUrls\n                ./passwordreset.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./passwordreset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitted\n                            \n                            \n                                success\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: UntypedFormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Gère la soumission du formulaire de réinitialisation du mot de passe.\nValide le formulaire et, si valide, utilise le service d'authentification\npour envoyer une demande de réinitialisation du mot de passe.\nGère également les erreurs lors de la demande.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/account/auth/passwordreset/passwordreset.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// Service pour la gestion de l'authentification\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n/**\n * Composant Passwordreset.\n *\n * Permet aux utilisateurs de demander une réinitialisation de leur mot de passe.\n * Utilise un formulaire réactif pour la saisie de l'email et communique avec le\n * service d'authentification pour effectuer la réinitialisation.\n */\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  // Formulaire de réinitialisation du mot de passe et ses états\n  resetForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // Variable pour stocker l'année actuelle, utilisée dans le template\n  year: number = new Date().getFullYear();\n\n  constructor(\n    private formBuilder: UntypedFormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    // Configuration initiale du formulaire de réinitialisation\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n    // Logique à exécuter après l'initialisation de la vue (si nécessaire)\n  }\n\n  // Accesseur pour faciliter l'accès aux contrôles du formulaire\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * Gère la soumission du formulaire de réinitialisation du mot de passe.\n   *\n   * Valide le formulaire et, si valide, utilise le service d'authentification\n   * pour envoyer une demande de réinitialisation du mot de passe.\n   * Gère également les erreurs lors de la demande.\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // Arrête l'exécution si le formulaire est invalide\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n    // Envoie la demande de réinitialisation du mot de passe\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n\n    \n\n    \n        passwordreset works!\n\n    \n\n    \n                \n                    ./passwordreset.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'passwordreset works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordresetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/auth/signup/signup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Signup.\nGère la logique d'inscription des utilisateurs, permettant de créer de nouveaux comptes.\nUtilise un formulaire réactif pour la saisie des données utilisateur et gère l'enregistrement\nvia différents services d'authentification en fonction de l'environnement.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n\n            \n                styleUrls\n                ./signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                signupForm\n                            \n                            \n                                submitted\n                            \n                            \n                                successmsg\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: UntypedFormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, userService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/auth/signup/signup.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/signup/signup.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/signup/signup.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account/auth/signup/signup.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Gère la soumission du formulaire d'inscription.\nValide le formulaire et utilise le service d'authentification approprié\npour enregistrer le nouvel utilisateur. Gère également les messages de succès\net les erreurs d'inscription.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/signup/signup.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/signup/signup.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/signup/signup.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successmsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/signup/signup.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/account/auth/signup/signup.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/account/auth/signup/signup.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// Services pour l'authentification et la gestion des profils utilisateurs\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { UserProfileService } from '../../../core/services/user.service';\n\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\n\n/**\n * Composant Signup.\n *\n * Gère la logique d'inscription des utilisateurs, permettant de créer de nouveaux comptes.\n * Utilise un formulaire réactif pour la saisie des données utilisateur et gère l'enregistrement\n * via différents services d'authentification en fonction de l'environnement.\n */\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  // Déclaration des variables pour le formulaire, la soumission, les erreurs et les messages de succès\n  signupForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // Variable pour stocker l'année actuelle, utile pour l'affichage dans le template\n  year: number = new Date().getFullYear();\n\n  constructor(\n    private formBuilder: UntypedFormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private authenticationService: AuthenticationService,\n    private userService: UserProfileService\n  ) { }\n\n  ngOnInit() {\n    // Configuration initiale du formulaire d'inscription\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngAfterViewInit() {\n    // Logique à exécuter après l'initialisation de la vue (si nécessaire)\n  }\n\n  // Accesseur pour les contrôles du formulaire\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * Gère la soumission du formulaire d'inscription.\n   *\n   * Valide le formulaire et utilise le service d'authentification approprié\n   * pour enregistrer le nouvel utilisateur. Gère également les messages de succès\n   * et les erreurs d'inscription.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // Vérifie si le formulaire est invalide et arrête l'exécution si c'est le cas\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      // Traite l'inscription en fonction de l'environnement d'authentification\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n\n    \n\n    \n        signup works!\n\n    \n\n    \n                \n                    ./signup.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'signup works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/ui/ui.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.models.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/auth.models.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: number;\n    username: string;\n    password: string;\n    firstName?: string;\n    lastName?: string;\n    token?: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service pour la gestion des profils utilisateurs.\nCe service fournit des fonctionnalités pour interagir avec les données utilisateur,\ntelles que l'obtention de la liste des utilisateurs et l'enregistrement de nouveaux utilisateurs.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructeur du service UserProfileService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient pour les requêtes HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Récupère tous les utilisateurs.\nEnvoie une requête GET pour obtenir une liste de tous les utilisateurs.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable contenant un tableau d'utilisateurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Enregistre un nouvel utilisateur.\nEnvoie une requête POST pour créer un nouvel utilisateur avec les données fournies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Les données de l'utilisateur à enregistrer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable pour la réponse de la requête.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// Importation du modèle User pour la gestion des données utilisateur\nimport { User } from '../models/auth.models';\n\n/**\n * Service pour la gestion des profils utilisateurs.\n *\n * Ce service fournit des fonctionnalités pour interagir avec les données utilisateur,\n * telles que l'obtention de la liste des utilisateurs et l'enregistrement de nouveaux utilisateurs.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    /**\n     * Constructeur du service UserProfileService.\n     * @param http HttpClient pour les requêtes HTTP.\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Récupère tous les utilisateurs.\n     *\n     * Envoie une requête GET pour obtenir une liste de tous les utilisateurs.\n     * @returns Un Observable contenant un tableau d'utilisateurs.\n     */\n    getAll() {\n        return this.http.get(`/api/login`);\n    }\n\n    /**\n     * Enregistre un nouvel utilisateur.\n     *\n     * Envoie une requête POST pour créer un nouvel utilisateur avec les données fournies.\n     * @param user Les données de l'utilisateur à enregistrer.\n     * @returns Un Observable pour la réponse de la requête.\n     */\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerticalComponent.html":{"url":"components/VerticalComponent.html","title":"component - VerticalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerticalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/vertical/vertical.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant Vertical.\nGère la mise en page verticale de l'application, y compris les interactions\net les ajustements spécifiques à cette disposition.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vertical\n            \n\n\n\n            \n                styleUrls\n                ./vertical.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vertical.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSettingsButtonClicked\n                            \n                            \n                                onToggleMobileMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/vertical/vertical.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/vertical/vertical.component.ts:23\n                        \n                    \n\n\n            \n                \n                        Actions à effectuer à l'initialisation du composant.\nConfigure les attributs du corps du document pour la mise en page verticale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSettingsButtonClicked\n                        \n                    \n                \n            \n            \n                \nonSettingsButtonClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/vertical/vertical.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Gère le clic sur le bouton des paramètres dans la barre supérieure.\nActive ou désactive le panneau des paramètres (barre latérale droite).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleMobileMenu\n                        \n                    \n                \n            \n            \n                \nonToggleMobileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/vertical/vertical.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Gère le clic sur le bouton de basculement du menu mobile.\nActive ou désactive la barre latérale et gère son affichage en fonction\nde la largeur de l'écran.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Composant Vertical.\n *\n * Gère la mise en page verticale de l'application, y compris les interactions\n * et les ajustements spécifiques à cette disposition.\n */\n@Component({\n  selector: 'app-vertical',  // Sélecteur CSS pour l'utilisation du composant\n  templateUrl: './vertical.component.html',  // Chemin vers le template HTML du composant\n  styleUrls: ['./vertical.component.scss']   // Chemin vers les styles SCSS du composant\n})\nexport class VerticalComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n   * Actions à effectuer à l'initialisation du composant.\n   *\n   * Configure les attributs du corps du document pour la mise en page verticale.\n   */\n  ngOnInit(): void {\n    document.body.setAttribute('data-sidebar', 'dark');\n    document.body.removeAttribute('data-layout-size');\n    document.body.removeAttribute('data-layout');\n    document.body.removeAttribute('data-topbar');\n    document.body.classList.remove('auth-body-bg');\n  }\n\n  /**\n   * Gère le clic sur le bouton de basculement du menu mobile.\n   *\n   * Active ou désactive la barre latérale et gère son affichage en fonction\n   * de la largeur de l'écran.\n   */\n  onToggleMobileMenu() {\n    document.body.classList.toggle('sidebar-enable');\n    document.body.classList.toggle('vertical-collpsed');\n\n    if (window.screen.width \n    \n\n    \n        vertical works!\n\n    \n\n    \n                \n                    ./vertical.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vertical works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HorizontalComponent', 'selector': 'app-horizontal'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordresetComponent', 'selector': 'app-passwordreset'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'VerticalComponent', 'selector': 'app-vertical'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerticalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/account/auth/passwordreset/passwordreset.component.ts\n            \n            component\n            PasswordresetComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/account/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/authUtils.ts\n            \n            class\n            FirebaseAuthBackend\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/authUtils.ts\n            \n            variable\n            _fireBaseBackend\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/authUtils.ts\n            \n            variable\n            getFirebaseBackend\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/authUtils.ts\n            \n            variable\n            initFirebaseBackend\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/helpers/fake-backend.ts\n            \n            interceptor\n            FakeBackendInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.models.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/services/authfake.service.ts\n            \n            injectable\n            AuthfakeauthenticationService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/core/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/services/event.service.ts\n            \n            interface\n            Event\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserProfileService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/layouts/horizontal/horizontal.component.ts\n            \n            component\n            HorizontalComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/layouts/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/layouts/layout/layouts.model.ts\n            \n            variable\n            LAYOUT_HORIZONTAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/layout/layouts.model.ts\n            \n            variable\n            LAYOUT_VERTICAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/vertical/vertical.component.ts\n            \n            component\n            VerticalComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.2.3\n        \n            firebase : ^10.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Fonction de création pour le chargeur de traduction.\nUtilisée par ngx-translate pour charger les fichiers de traduction.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HttpClient utilisé pour les requêtes de traduction.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un TranslateHttpLoader configuré.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSogapaintCrm\nThis project was generated with Angular CLI version 17.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_declarations\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAccountModule -->\n\nAuthModule->AccountModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nAppModule -->\n\nLayoutsModule->AppModule\n\n\n\n\n\nHorizontalComponent \n\nHorizontalComponent \n\nHorizontalComponent  -->\n\nLayoutsModule->HorizontalComponent \n\n\n\n\n\nVerticalComponent \n\nVerticalComponent \n\nVerticalComponent  -->\n\nLayoutsModule->VerticalComponent \n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nFakeBackendInterceptor\n\nFakeBackendInterceptor\n\nAppModule -->\n\nFakeBackendInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordresetComponent\n\nPasswordresetComponent\n\nAuthModule -->\n\nPasswordresetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nHorizontalComponent\n\nHorizontalComponent\n\nLayoutsModule -->\n\nHorizontalComponent->LayoutsModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutsModule -->\n\nLayoutComponent->LayoutsModule\n\n\n\n\n\nVerticalComponent\n\nVerticalComponent\n\nLayoutsModule -->\n\nVerticalComponent->LayoutsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLayoutsModule -->\n\nSharedModule->LayoutsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventCallback   (src/.../event.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/event.service.ts\n    \n    \n        \n            \n                \n                    \n                    EventCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _fireBaseBackend   (src/.../authUtils.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getFirebaseBackend   (src/.../authUtils.ts)\n                        \n                        \n                            initFirebaseBackend   (src/.../authUtils.ts)\n                        \n                        \n                            LAYOUT_HORIZONTAL   (src/.../layouts.model.ts)\n                        \n                        \n                            LAYOUT_VERTICAL   (src/.../layouts.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/authUtils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _fireBaseBackend\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirebaseBackend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n    return _fireBaseBackend;\n}\n                    \n                \n\n            \n                \n                    Obtient l'instance actuelle de FirebaseAuthBackend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFirebaseBackend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config) => {\n    if (!_fireBaseBackend) {\n        _fireBaseBackend = new FirebaseAuthBackend(config);\n    }\n    return _fireBaseBackend;\n}\n                    \n                \n\n            \n                \n                    Initialise FirebaseAuthBackend avec la configuration donnée.\nAssure une instance unique de FirebaseAuthBackend.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  defaultauth: 'fackbackend',\n  firebaseConfig: {\n    apiKey: '',\n    authDomain: '',\n    databaseURL: '',\n    projectId: '',\n    storageBucket: '',\n    messagingSenderId: '',\n    appId: '',\n    measurementId: ''\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  defaultauth: 'fackbackend',\n  firebaseConfig: {\n    apiKey: '',\n    authDomain: '',\n    databaseURL: '',\n    projectId: '',\n    storageBucket: '',\n    messagingSenderId: '',\n    appId: '',\n    measurementId: ''\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/layouts/layout/layouts.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LAYOUT_HORIZONTAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'horizontal'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAYOUT_VERTICAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'vertical'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
